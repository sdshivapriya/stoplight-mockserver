---
swagger: "2.0"
info:
  description: |
    The Discovery API provides a standardized client interface to search for product offerings across different sales channels and find a suitable product offering. The information in the product catalog is indexed and enables the user to perform faster search operations.
    The API supports the ability to The Product Offering Discovery subdomain enables a user to browse, search, and retrieve qualified product offerings along with the product characteristics as well as its prices. Additionally, it provides Compare, Filter, and Sort capabilities. When browsing and selecting a specific product offer, the user is able to view details such as specifications and promotions.
  version: "1.1"
  title: Product Offering Discovery - Discovery Product Offering
  contact:
    name: Amdocs Inc.
    url: http://www.amdocs.com
    email: support@amdocs.com
  license:
    name: Amdocs Inc.
    url: http://
  x-amdocs:
    exposed: public
    service-principals:
      - pod-search-app-id
      - pod-productoffering-app-id
      - pod-category-app-id
      - pod-price-app-id
host: amdocs.com:10101
basePath: /productOfferingDiscovery/v1.1
tags:
  - name: searchProductOffering
  - name: productOffering
  - name: compareProductOffering
  - name: price
  - name: category
  - name: promotionQualification
schemes:
  - https
consumes:
  - application/json;charset=utf-8
produces:
  - application/json;charset=utf-8
paths:
  /searchProductOffering:
    get:
      tags:
        - searchProductOffering
      summary: (Internal) List product offering entities - use internally by product offering MS
      description: "This service lists product offering entities - internal use by productOffering MS ,limit and offset parameters must be provided together      \n\n**Mandatory&#58;**\n- Request Context (customer, sales channel, cart, order) \n\n**Referenced Data&#58;**\n- relationType - relation types are defined in CatalogOne\n\n**Business Rules&#58;**\n- relationType and relatedEntityId - must be provided together. In some cases where additional entity is needed, relationSecondaryId will be provided with both \n- relatedPartyId and relatedPartyRole  - must be provided together."
      operationId: searchProductOffering
      schemes:
        - https
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: relatedPartyId
          in: query
          description: "The relatedPartyId in context, relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartyRole
          in: query
          description: "The relatedPartyRole in context (such as customer, user), relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartySegment
          in: query
          description: "The relatedPartySegment in context, relevant only to CSR \"on-behalf\" context flow with customer role.\nUsed for qualification, eligibility , price. \nCan hold any segment as defined in customer accessor.\n"
          required: false
          type: string
        - name: textSearch
          in: query
          description: |
            The searchable text within a product offering entity
          required: false
          type: string
        - name: categoryId
          in: query
          description: |
            The category identifiers by which the product offerings are requested by the client
            The supported category values are defined in the product catalog
            <i>Example&#58; categoryId==123</i>
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: categoryName
          in: query
          description: |
            The category name identifiers by which the product offerings are requested by the client
            The supported category values are defined in the product catalog
            <i>Example&#58; categoryName==AddOns</i>
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: characteristics
          in: query
          description: |
            The product characteristics by which the product offerings are requested by the client
            Only the exact match is supported
            <i>Example&#58; characteristics={[fieldName]&#58; [[value],,[value]],, [fieldName]&#58; [[value],,[value]]}</i>
            <i>Example&#58;characteristics=[{"fieldName"&#58; "Color", "values"&#58; ["Gold"]}]</i>
          required: false
          type: string
        - name: relationType
          in: query
          description: |
            The type of the relation by which the related product offering population requested by the client is retrieved
          required: false
          type: string
        - name: relationRole
          in: query
          description: |
            The business type definition of the relation by which the related product offering population requested by the client is retrieved
            like &#58;
              - RelatedDevice.
              - Add-On.
              - Accessories
          required: false
          type: string
        - name: returnSource
          in: query
          description: "In case set to true, the reverse lookup target to source will be performed - default = false\n- when in use (true) in get relationships will return the relationship which the search ID is the target\n- when in use in search productoffering will return a list of source product offers that related to this specific offer \n"
          required: false
          type: boolean
        - name: relatedEntityId
          in: query
          description: "The related product offering ID by which the related product offering population requested by the client is retrieved, The replaceable product offering ID by which the replaceable product offering population requested by the client is retrieved, user would like to replace his plan with a replaceable offer \n"
          required: false
          type: string
        - name: relationId
          in: query
          description: "\"The relation where relatedEntityId is the source, and we want to get the related product offerings for. This will be obtained by the user by calling the /productOfferingRelationship endpoint first and selecting which relation to get related offers for. The relatedProductOfferings that will be returned are the targets of this relation.\" \n"
          required: false
          type: string
        - name: relationSecondaryId
          in: query
          description: "When needed by flow will represent additional offer needed as input, user wants to replace a plan (his current plan will be relatedEntityId) which is compatible with his existing 'device' (the secondary input for the replace flow)\nin case of subscription relation will represent the additional subscription offer as input (cart item id, order item id)  \n"
          required: false
          type: string
        - name: relationSecondaryType
          in: query
          description: "When needed by flow will represent the context of the relationSecondaryId, in case a replace for a bundle is needed and a product offer inside the bundle is kept \n•  relationType – populated with “replaceable”\n•  relatedEntityId – populated with current bundle productOfferID\n•  relationSecondaryId – populated with current device offerID\n•  relationSecondaryType – populated with bundle type  \n"
          required: false
          type: string
        - name: secondaryContextType
          in: query
          description: |
            When needed by flow will represent the context of the relationSecondaryId, Cart, Order, Inventory
          required: false
          type: string
        - name: secondaryContextMainId
          in: query
          description: |
            When needed by flow will represent the context of the secondaryContextMainId, CartId, OrderId, Inventory
          required: false
          type: string
        - name: productOfferingTypeGroup
          in: query
          description: |
            The (real) type of the product offering, The service searches for any of the product, in the product offer tree which match a specific productOfferingTypeGroup
          required: false
          type: string
        - name: productOfferingGroup
          in: query
          description: |
            The reference to all product offerings in case of dynamic group, return the bundle group population in the case the group holds only policy (dynamic group), known as policyId in BundledProductConfigurationGroup of product configuration.
            supported values are&#58;
              - defined in Catalog - group in BundledGroupProductOffering
          required: false
          type: string
        - name: groupByVariantGroup
          in: query
          description: |
            Indicates whether the search results shall be grouped to their variant groups
          required: false
          type: boolean
          default: false
        - name: offset
          in: query
          description: "Requested index for start of resources to be provided in the response requested by the client \n"
          required: false
          type: integer
        - name: limit
          in: query
          description: |
            Requested number of resources to be provided in the response requested by the client
          required: false
          type: integer
        - name: sort
          in: query
          description: ' The fields by which the response is requested by the client to be sorted. The supported values are:priceRC, priceOC, startDateTime and name'
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: minPrice
          in: query
          description: |
            The minimum value used for searching a price
          required: false
          type: number
        - name: maxPrice
          in: query
          description: |
            The maximum value used for searching a price
          required: false
          type: number
        - name: priceType
          in: query
          description: |
            The type of the price, for example, OC or RC. If no value is provided, a configuration value is used. The parameter is relevant for the filtering of minPrice maxPrice
          required: false
          type: string
        - name: recurringChargePeriod
          in: query
          description: |
            The period of the recurring charge, for example, weekly, monthly
          required: false
          type: string
        - name: contextType
          in: query
          description: |
            The type of the context from which the call is performed, for example, ProductOffering (catalog), Cart, Order, Inventory without context means aleways ProductOffering
          required: false
          type: string
          x-example: Cart
        - name: contextMainIdentifier
          in: query
          description: |
            The identifier of the main entity in the context from which the call is performed, for example, cart ID or order ID
          required: false
          type: string
        - name: contextItemIdentifier
          in: query
          description: |
            The ID of the related entity - CartItemId, OrderItemId (ProductId)
          required: false
          type: string
        - name: contextIdentifier
          in: query
          description: |
            The ID of the related entity - product offering ID
          required: false
          type: string
        - name: mask
          in: query
          description: |
            The parameter of the mask query. A mask is a set of flags that impact the service and the returned fields. The supported values
            - *returnStockInformation* - Returns stock information by calling stock management. When no mask is supplied, the information about the ‘stock’ will not be returned.
            -*onlyIds* - Returnes only the ids of the search response offers (send the response as it arrives from the search MS)
          required: false
          type: string
        - name: stockAvailabilityStatus
          in: query
          description: |
            The stock availability status by which the product offerings requested by the client are retrieved, for example, inStock, OutOfStock, or LowStock
          required: false
          type: string
        - name: disableServiceabilityCheck
          in: query
          description: |
            "In case set to true, skip the serviceability check"
          required: false
          type: boolean
          default: false
        - name: checkQualification
          in: query
          description: "Indicates whether to perform qualification check for offer if set to false do not perform the qualification check. If set to true, perform the qualification check (default)"
          required: false
          type: boolean
          default: true
        - name: enableAutoComplete
          in: query
          description: |
            "Indicates whether to enable auto completion of the text search"
          required: false
          type: boolean
          default: false
        - name: groupByCategory
          in: query
          description: |
            Indicates whether the product offers are sorted by categories or not
            Note: if set to true, no additional sort can be applied
          required: false
          type: boolean
          default: false
        - name: excludePrices
          in: query
          description: "Indicates if the operation should involve with price recalculation and/include prices in the response. \nSet to 'false' to recalculate prices and return them in the response. \n"
          required: false
          type: boolean
          default: false
        - name: mustBeBundled
          in: query
          description: |
            "Determines if the product offering can be sold as a standalone\
            \ (false), or available only as part of a bundle or bundles (true)."
          required: false
          type: boolean
        - name: "productOfferingId"
          in: "query"
          description: "The searchable product offering identifiers, the list of IDs\
            \ is limited to be paginated by client - the URI length is limited to 2048\
            \ characters"
          required: false
          type: "array"
          items:
            type: "string"
            minLength: 1
          collectionFormat: "multi"
        - name: "productOfferingName"
          in: "query"
          description: "The searchable product offering identifiers, the list of Names\
            \ is limited to be paginated by client - the URI length is limited to 2048\
            \ characters"
          required: false
          type: "array"
          items:
            type: "string"
            minLength: 1
          collectionFormat: "multi"
        - name: includeExpiredOffers
          in: query
          description: "Indicates if search should return expired product offers or not."
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: |
            *OK* - The SearchProductOffering information was retrieved successfully.
          headers:
            X-Total-Count:
              type: integer
              format: int64
              description: |
                The total number of matching resources
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductOffering'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-search-ms
      x-dox-InternalAPI: true
      x-amdocs:
        route-service: pod-search-service
        private-roles:
          - D1P_ProductOfferingDiscovery_read
  /searchProductOfferingInfo:
    get:
      tags:
        - searchProductOffering
      summary: (Internal) List product offering details by IDs - use internally by product offering MS
      description: "(Internal) List product offering details by IDs - use internally by product offering MS      \n"
      operationId: searchProductOfferingInfo
      schemes:
        - https
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: productOfferingId
          in: query
          description: The searchable product offering identifiers, the list of IDs is limited to be paginated by client - the URI length is limited to 2048 characters- when IDs are supplied all other filtering is disregarded
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: "multi"
        - name: "productOfferingName"
          in: "query"
          description: "The searchable product offering identifiers, the list of Names\
          \ is limited to be paginated by client - the URI length is limited to 2048\
          \ characters"
          required: false
          type: "array"
          items:
            type: "string"
            minLength: 1
          collectionFormat: "multi"
      responses:
        "200":
          description: |
            *OK* - The SearchProductOffering information was retrieved successfully.
          headers:
            X-Total-Count:
              type: integer
              format: int64
              description: |
                The total number of matching resources
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductOffering'
        "400":
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        "412":
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        "500":
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        "502":
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-search-ms
      x-dox-InternalAPI: true
      x-amdocs:
        route-service: pod-search-service
        private-roles:
          - D1P_ProductOfferingDiscovery_read
  /productOfferingRelationship:
    get:
      tags:
        - searchProductOffering
      summary: List product offering relationships which the product offer is their source
      description: "This service lists product offering relationships which the product offer is their source       \n\n**Mandatory&#58;**\n- Request Context (customer, sales channel, cart, order), limit and offset parameters must be provided together \n\n**Referenced Data&#58;**\n- relationType - relation types are defined in CatalogOne\n source offer is the source offer / source group that the relations should relate to\n Target offer are not to be used, the structure includes them, but they will be populated only after calculation. Calculation is not a part of this API\n"
      operationId: productOfferingRelationship
      schemes:
        - https
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: relatedPartyId
          in: query
          description: "The relatedPartyId in context, relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartyRole
          in: query
          description: "The relatedPartyRole in context (such as customer, user), relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartySegment
          in: query
          description: "The relatedPartySegment in context, relevant only to CSR \"on-behalf\" context flow with customer role.\nUsed for qualification, eligibility , price. \nCan hold any segment as defined in customer accessor.\n"
          required: false
          type: string
        - name: returnSource
          in: query
          description: "In case set to true, the reverse lookup target to source will be performed - default = false\n- when in use (true) in get relationships will return the relationship which the search ID is the target\n- when in use in search productoffering will return a list of source product offers that related to this specific offer \n"
          required: false
          type: boolean
        - name: relatedEntityId
          in: query
          description: "The related product offering ID by which the related product offering population requested by the client is retrieved, The replaceable product offering ID by which the replaceable product offering population requested by the client is retrieved, user would like to replace his plan with a replaceable offer \n"
          required: false
          type: string
        - name: relationType
          in: query
          description: "The type of the relation by which the related product offering population requested by the client is retrieved"
          required: false
          type: string
        - name: relationRole
          in: query
          description: |
            The business type definition of the relation by which the related product offering population requested by the client is retrieved
            like &#58;
              - RelatedDevice.
              - Add-On.
              - Accessories
          required: false
          type: string
        - name: offset
          in: query
          description: "Requested index for start of page to be provided in the response requested by the client \n"
          required: false
          type: integer
        - name: limit
          in: query
          description: |
            Requested number of resources to be provided in the response requested by the client
          required: false
          type: integer
      responses:
        200:
          description: |
            *OK* - The SearchProductOffering information was retrieved successfully.
          headers:
            X-Total-Count:
              type: integer
              format: int64
              description: |
                The total number of matching resources
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductOfferingRelationship'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-search-ms
      x-amdocs:
        route-service: pod-search-service
        public-roles:
          - D1_ProductOfferingDiscovery_retrieve
        private-roles:
          - D1P_ProductOfferingDiscovery_read
          - FndP_APIGateway_gw
  /productOffering:
    get:
      tags:
        - productOffering
      summary: List product offering entities
      description: "This service lists product offering entities related to the provided search criteria.        \n\n**Mandatory&#58;**\n- Request Context (customer, sales channel, cart, order)\n\n**Referenced Data&#58;**\n- relationType - relation types are defined in CatalogOne\n\n**Business Rules&#58;;**\n- relationType and relatedEntityId - must be provided together. In some cases where additional entity is needed, relationSecondaryId will be provided with both.\n- Limit and offset parameters - must be provided together.\n- relatedPartyId and relatedPartyRole  - must be provided together."
      operationId: productOffering
      schemes:
        - https
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: relatedPartyId
          in: query
          description: "The relatedPartyId in context, relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartyRole
          in: query
          description: "The relatedPartyRole in context (such as customer, user), relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartySegment
          in: query
          description: "The relatedPartySegment in context, relevant only to CSR \"on-behalf\" context flow with customer role.\nUsed for qualification, eligibility , price. \nCan hold any segment as defined in customer accessor.\n"
          required: false
          type: string
        - name: "productOfferingId"
          in: "query"
          description: "The searchable product offering identifiers, the list of IDs\
            \ is limited to be paginated by client - the URI length is limited to 2048\
            \ characters"
          required: false
          type: "array"
          items:
            type: "string"
            minLength: 1
          collectionFormat: "multi"
        - name: "productOfferingName"
          in: "query"
          description: "The searchable product offering identifiers, the list of Names\
            \ is limited to be paginated by client - the URI length is limited to 2048\
            \ characters"
          required: false
          type: "array"
          items:
            type: "string"
            minLength: 1
          collectionFormat: "multi"
        - name: textSearch
          in: query
          description: |
            The searchable text within a product offering entity
          required: false
          type: string
        - name: categoryId
          in: query
          description: |
            The category identifiers by which the product offerings are requested by the client
            The supported category values are defined in the product catalog
            <i>Example&#58; categoryId==123</i>
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: categoryName
          in: query
          description: |
            The category name identifiers by which the product offerings are requested by the client
            The supported category values are defined in the product catalog
            <i>Example&#58; categoryName==AddOns</i>
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: characteristics
          in: query
          description: |
            The product characteristics by which the product offerings are requested by the client
            Only the exact match is supported
            <i>Example&#58; characteristics={[fieldName]&#58; [[value],,[value]],, [fieldName]&#58; [[value],,[value]]}</i>
            <i>Example&#58;characteristics=[{"fieldName"&#58; "Color", "values"&#58; ["Gold"]}]</i>
          required: false
          type: string
        - name: relationType
          in: query
          description: |
            The type of the relation by which the related product offering population requested by the client is retrieved
          required: false
          type: string
        - name: relationRole
          in: query
          description: |
            The business type definition of the relation by which the related product offering population requested by the client is retrieved
            like &#58;
              - RelatedDevice.
              - Add-On.
              - Accessories
          required: false
          type: string
        - name: returnSource
          in: query
          description: "In case set to true, the reverse lookup target to source will be performed - default = false\n- when in use (true) in get relationships will return the relationship which the search ID is the target\n- when in use in search productoffering will return a list of source product offers that related to this specific offer \n"
          required: false
          type: boolean
        - name: relationId
          in: query
          description: "\"The relation where relatedEntityId is the source, and we want to get the related product offerings for. This will be obtained by the user by calling the /productOfferingRelationship endpoint first and selecting which relation to get related offers for. The relatedProductOfferings that will be returned are the targets of this relation.\" \n"
          required: false
          type: string
        - name: relatedEntityId
          in: query
          description: "The related product offering ID by which the related product offering population requested by the client is retrieved, The replaceable product offering ID by which the replaceable product offering population requested by the client is retrieved, user would like to replace his plan with a replaceable offer \n"
          required: false
          type: string
        - name: relationSecondaryId
          in: query
          description: "When needed by flow will represent additional offer needed as input, user wants to replace a plan (his current plan will be relatedEntityId) which is compatible with his existing 'device' (the secondary input for the replace flow)\nin case of subscription relation will represent the additional subscription offer as input (cart item id, order item id)  \n"
          required: false
          type: string
        - name: relationSecondaryType
          in: query
          description: "When needed by flow will represent the context of the relationSecondaryId, in case a replace for a bundle is needed and a product offer inside the bundle is kept \n•  relationType – populated with “replaceable”\n•  relatedEntityId – populated with current bundle productOfferID\n•  relationSecondaryId – populated with current device offerID\n•  relationSecondaryType – populated with bundle type  \n"
          required: false
          type: string
        - name: secondaryContextType
          in: query
          description: |
            When needed by flow will represent the context of the relationSecondaryId, Cart, Order, Inventory
          required: false
          type: string
        - name: secondaryContextMainId
          in: query
          description: |
            When needed by flow will represent the context of the secondaryContextMainId, CartId, OrderId, Inventory
          required: false
          type: string
        - name: relationSecondaryContextType
          in: query
          description: |
            The context where the subscriberMainOffer resides. Valid values are cart, order, inventory.
          required: false
          type: string
        - name: productOfferingTypeGroup
          in: query
          description: |
            The (real) type of the product offering, The service searches for any of the product, in the product offer tree which match a specific productOfferingTypeGroup
          required: false
          type: string
        - name: productOfferingGroup
          in: query
          description: |
            The reference to all product offerings in case of dynamic group, return the bundle group population in the case the group holds only policy (dynamic group), known as policyId in BundledProductConfigurationGroup of product configuration.
            supported values are&#58;
              - defined in Catalog - group in BundledGroupProductOffering
          required: false
          type: string
        - name: groupByVariantGroup
          in: query
          description: |
            Indicates whether to search results shall be grouped to their variant groups
          required: false
          type: boolean
          default: false
        - name: offset
          in: query
          description: "Requested index for start of resources to be provided in the response requested by the client \n"
          required: false
          type: integer
        - name: limit
          in: query
          description: |
            Requested number of resources to be provided in the response requested by the client
          required: false
          type: integer
        - name: sort
          in: query
          description: ' The fields by which the response is requested by the client to be sorted. The supported values are: priceRC, priceOC, startDateTime and name'
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: minPrice
          in: query
          description: |
            The minimum value used for searching a price
          required: false
          type: number
        - name: maxPrice
          in: query
          description: |
            The maximum value used for searching a price
          required: false
          type: number
        - name: priceType
          in: query
          description: |
            The type of the price, for example, OC or RC. If no value is provided, a configuration value is used. The parameter is relevant for the filtering of minPrice maxPrice
          required: false
          type: string
        - name: recurringChargePeriod
          in: query
          description: |
            The period of the recurring charge, for example, weekly, monthly
          required: false
          type: string
        - name: contextType
          in: query
          description: |
            The type of the context from which the call is performed, for example, ProductOffering (catalog), Cart, Order, Inventory without context means aleways ProductOffering
          required: false
          type: string
          x-example: Cart
        - name: contextMainIdentifier
          in: query
          description: |
            The identifier of the main entity in the context from which the call is performed, for example, cart ID or order ID
          required: false
          type: string
        - name: contextItemIdentifier
          in: query
          description: |
            The ID of the related entity - CartItemId, OrderItemId (ProductId)
          required: false
          type: string
        - name: contextIdentifier
          in: query
          description: |
            The ID of the related entity - product offering ID
          required: false
          type: string
        - name: mask
          in: query
          description: |
            The parameter of the mask query. A mask is a set of flags that impact the service and the returned fields. The supported values
            - *returnStockInformation* - Returns stock information by calling stock management. When no mask is supplied, the information about the ‘stock’ will not be returned.
            -*onlyIds* - Returnes only the ids of the search response offers (send the response as it arrives from the search MS)
          required: false
          type: string
        - name: stockAvailabilityStatus
          in: query
          description: |
            The stock availability status by which the product offerings requested by the client are retrieved, for example, inStock, OutOfStock, or LowStock
          required: false
          type: string
        - name: disableServiceabilityCheck
          in: query
          description: |
            In case set to true, skip the serviceability check"
          required: false
          type: boolean
          default: false
        - name: checkQualification
          in: query
          description: |
            Indicates whether to perform qualification check for offer details  if set to false, do not perform the qualification check. If set to true, perform the qualification check (default).
          required: false
          type: boolean
          default: true
        - name: enableAutoComplete
          in: query
          description: |
            Indicates whether to enable auto completion of the text search
          required: false
          type: boolean
          default: false
        - name: groupByCategory
          in: query
          description: |
            Indicates whether the product offers are sorted by categories or not
            Note: if set to true, no additional sort can be applied
          required: false
          type: boolean
          default: false
        - name: includeAllNodes
          in: query
          description: |
            Indicates whether the full node tree is returned or only the top two levels.
            If set to false (default), only the top two levels are returned.
            If set to true, the full node tree is returned.
          required: false
          type: boolean
          default: false
        - name: excludePrices
          in: query
          description: "Indicates if the operation should involve with price recalculation and/include prices in the response. \nSet to 'false' to recalculate prices and return them in the response. \n"
          required: false
          type: boolean
          default: false
        - name: mustBeBundled
          in: query
          description: |
            "Determines if the product offering can be sold as a standalone\
            \ (false), or available only as part of a bundle or bundles (true)."
          required: false
          type: boolean
        - name: includeExpiredOffers
          in: query
          description: "Indicates if search should return expired product offers or not."
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: |
            *OK* - The SearchProductOffering information was retrieved successfully.
          headers:
            X-Total-Count:
              type: integer
              format: int64
              description: |
                The total number of matching resources
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductOffering'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-productoffering-ms
      x-amdocs:
        route-service: pod-productoffering-service
        public-roles:
          - D1_ProductOfferingDiscovery_retrieve
        private-roles:
          - D1P_ProductOfferingDiscovery_read
          - FndP_APIGateway_gw
  /searchProductOfferRelatedCategory:
    get:
      tags:
        - searchProductOffering
      summary: Retrieve a list of product offerings with relation to a certain category
      description: "This service retrieves an array of categories with the total number of product offerings that relate to the category by the provided search criteria.\n\n**Mandatory&#58;**\n- Request Context (customer, sales channel, cart, order) \n\n**Business Rules&#58;**\nrelationType, relatedEntityId - paired together, meaning must be provided together in some cases where additional entity is needed relationSecondaryId will be provided with both, limit and offset parameters must be provided together. \n"
      operationId: searchProductOfferRelatedCategory
      schemes:
        - https
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: relatedPartyId
          in: query
          description: "The relatedPartyId in context, relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartyRole
          in: query
          description: "The relatedPartyRole in context (such as customer, user), relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartySegment
          in: query
          description: "The relatedPartySegment in context, relevant only to CSR \"on-behalf\" context flow with customer role.\nUsed for qualification, eligibility , price. \nCan hold any segment as defined in customer accessor.\n"
          required: false
          type: string
        - name: textSearch
          in: query
          description: |
            The searchable text within a product offering entity
          required: false
          type: string
        - name: categoryId
          in: query
          description: |
            The category identifiers by which the product offerings are requested by the client
            The supported category values are defined in the product catalog
            <i>Example&#58; categoryId==123</i>
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: categoryName
          in: query
          description: |
            The category name identifiers by which the product offerings are requested by the client
            The supported category values are defined in the product catalog
            <i>Example&#58; categoryName==AddOns</i>
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: characteristics
          in: query
          description: |
            The product characteristics by which the product offerings are requested by the client
            Only the exact match is supported
            <i>Example&#58; characteristics={[fieldName]&#58; [[value],,[value]],, [fieldName]&#58; [[value],,[value]]}</i>
            <i>Example&#58;characteristics=[{"fieldName"&#58; "Color", "values"&#58; ["Gold"]}]</i>
          required: false
          type: string
        - name: relatedEntityId
          in: query
          description: "The related product offering ID by which the related product offering population requested by the client is retrieved, The replaceable product offering ID by which the replaceable product offering population requested by the client is retrieved, user would like to replace his plan with a replaceable offer \n"
          required: false
          type: string
        - name: relationType
          in: query
          description: "The type of the relation by which the related product offering population requested by the client is retrieved"
          required: false
          type: string
        - name: relationRole
          in: query
          description: |
            The business type definition of the relation by which the related product offering population requested by the client is retrieved
            like &#58;
              - RelatedDevice.
              - Add-On.
              - Accessories
          required: false
          type: string

        - name: relationId
          in: query
          description: "\"The relation where relatedEntityId is the source, and we want to get the related product offerings for. This will be obtained by the user by calling the /productOfferingRelationship endpoint first and selecting which relation to get related offers for. The relatedProductOfferings that will be returned are the targets of this relation.\" \n"
          required: false
          type: string
        - name: relationSecondaryId
          in: query
          description: "When needed by flow will represent additional offer needed as input, user wants to replace a plan (his current plan will be relatedEntityId) which is compatible with his existing 'device' (the secondary input for the replace flow)\nin case of subscription relation will represent the additional subscription offer as input (cart item id, order item id)  \n"
          required: false
          type: string
        - name: relationSecondaryType
          in: query
          description: "When needed by flow will represent the context of the relationSecondaryId, in case a replace for a bundle is needed and a product offer inside the bundle is kept \n•  relationType – populated with “replaceable”\n•  relatedEntityId – populated with current bundle productOfferID\n•  relationSecondaryId – populated with current device offerID\n•  relationSecondaryType – populated with bundle type  \n"
          required: false
          type: string
        - name: productOfferingTypeGroup
          in: query
          description: |
            The (real) type of the product offering, The service searches for any of the product, in the product offer tree which match a specific productOfferingTypeGroup
          required: false
          type: string
        - name: productOfferingGroup
          in: query
          description: |
            The reference to all product offerings in case of dynamic group, return the bundle group population in the case the group holds only policy (dynamic group), known as policyId in BundledProductConfigurationGroup of product configuration.
            supported values are&#58;
              - defined in Catalog - group in BundledGroupProductOffering
          required: false
          type: string
        - name: groupByVariantGroup
          in: query
          description: |
            Indicates whether the search results shall be grouped to their variant groups
          required: false
          type: boolean
          default: false
        - name: offset
          in: query
          description: "Requested index for start of resources to be provided in the response requested by the client \n"
          required: false
          type: integer
        - name: limit
          in: query
          description: |
            Requested number of resources to be provided in the response requested by the client
          required: false
          type: integer
        - name: sort
          in: query
          description: ' The fields by which the response is requested by the client to be sorted. The supported values are: priceRC, priceOC, startDateTime and name'
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: minPrice
          in: query
          description: |
            The minimum value used for searching a price
          required: false
          type: number
        - name: maxPrice
          in: query
          description: |
            The maximum value used for searching a price
          required: false
          type: number
        - name: priceType
          in: query
          description: |
            The type of the price, for example, OC or RC. If no value is provided, a configuration value is used. The parameter is relevant for the filtering of minPrice maxPrice
          required: false
          type: string
        - name: recurringChargePeriod
          in: query
          description: |
            The period of the recurring charge, for example, weekly, monthly
          required: false
          type: string
        - name: contextType
          in: query
          description: |
            The type of the context from which the call is performed, for example, ProductOffering (catalog), Cart, Order, Inventory without context means aleways ProductOffering
          required: false
          type: string
          x-example: Cart
        - name: contextMainIdentifier
          in: query
          description: |
            The identifier of the main entity in the context from which the call is performed, for example, cart ID or order ID
          required: false
          type: string
        - name: contextItemIdentifier
          in: query
          description: |
            The ID of the related entity - CartItemId, OrderItemId (ProductId)
          required: false
          type: string
        - name: contextIdentifier
          in: query
          description: |
            The ID of the related entity - product offering ID
          required: false
          type: string
        - name: mask
          in: query
          description: |
            The parameter of the mask query. A mask is a set of flags that impact the service and the returned fields. The supported values
            - *returnStockInformation* - Returns stock information by calling stock management.
            - *returnProductOfferingIds* - return list of product offering id only
          required: false
          type: string
        - name: "productOfferingId"
          in: "query"
          description: "The searchable product offering identifiers, the list of IDs\
            \ is limited to be paginated by client - the URI length is limited to 2048\
            \ characters"
          required: false
          type: "array"
          items:
            type: "string"
            minLength: 1
          collectionFormat: "multi"
        - name: "productOfferingName"
          in: "query"
          description: "The searchable product offering identifiers, the list of Names\
            \ is limited to be paginated by client - the URI length is limited to 2048\
            \ characters"
          required: false
          type: "array"
          items:
            type: "string"
            minLength: 1
          collectionFormat: "multi"
        - name: returnSource
          in: query
          description: |
            Indicates whether the reverse lookup target to source will be performed:
            If set to false (default), target product offering will be returned.
            If set to true, source product offering will be returned.
            Required query params: relatedEntityId, relationType, relationId.
          required: false
          type: boolean
          default: false
        - name: enableAutoComplete
          in: query
          description: |
            "Indicates whether to enable auto completion of the text search"
          required: false
          type: boolean
          default: false
        - name: disableServiceabilityCheck
          in: query
          description: |
            In case set to true, skip the serviceability check"
          required: false
          type: boolean
          default: false
        - name: checkQualification
          in: query
          description: "Indicates whether to perform qualification check for offer if set to false do not perform the qualification check. If set to true, perform the qualification check (default)"
          required: false
          type: boolean
          default: true
        - name: groupByCategory
          in: query
          description: |
            Indicates whether the product offers are sorted by categories or not
            Note: if set to true, no additional sort can be applied
          required: false
          type: boolean
          default: false
        - name: onlyLeafCategory
          in: query
          description: |
            If provided with value "true" return only leaf category (only the category defined on the product offer)
          required: false
          type: boolean
          default: false
        - name: includeExpiredOffers
          in: query
          description: "Indicates if search should return expired product offers or not."
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: |
            *OK* - The SearchProductOfferRelatedCategory information was retrieved successfully.
          headers:
            X-Total-Count:
              type: integer
              format: int64
              description: |
                The total number of matching resources
          schema:
            type: array
            items:
              $ref: '#/definitions/SearchProductOfferingRelatedCategory'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-search-ms
      x-amdocs:
        route-service: pod-search-service
        public-roles:
          - D1_ProductOfferingDiscovery_retrieve
        private-roles:
          - D1P_ProductOfferingDiscovery_read
          - FndP_APIGateway_gw
  /searchProductOfferRelatedCharacteristics:
    get:
      tags:
        - searchProductOffering
      summary: Retrieve product offering characteristics and their values according to search filter
      description: "This service retrieves the product offering characteristic with its corresponding characteristic\nvalues, which are related to the provided search criteria.\n\n**Mandatory&#58;**\n- Request Context (customer, sales channel, cart, order)  limit and offset parameters must be provided together\n"
      operationId: searchProductOfferRelatedCharacteristics
      schemes:
        - https
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: relatedPartyId
          in: query
          description: "The relatedPartyId in context, relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartyRole
          in: query
          description: "The relatedPartyRole in context (such as customer, user), relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartySegment
          in: query
          description: "The relatedPartySegment in context, relevant only to CSR \"on-behalf\" context flow with customer role.\nUsed for qualification, eligibility , price. \nCan hold any segment as defined in customer accessor.\n"
          required: false
          type: string
        - name: textSearch
          in: query
          description: |
            The searchable text within a product offering entity
          required: false
          type: string
        - name: categoryId
          in: query
          description: |
            The category identifiers by which the product offerings are requested by the client
            The supported category values are defined in the product catalog
            <i>Example&#58; categoryId==123</i>
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: categoryName
          in: query
          description: |
            The category name identifiers by which the product offerings are requested by the client
            The supported category values are defined in the product catalog
            <i>Example&#58; categoryName==AddOns</i>
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: characteristics
          in: query
          description: |
            The product characteristics by which the product offerings are requested by the client
            Only the exact match is supported
            <i>Example&#58; characteristics={[fieldName]&#58; [[value],,[value]],, [fieldName]&#58; [[value],,[value]]}</i>
            <i>Example&#58;characteristics=[{"fieldName"&#58; "Color", "values"&#58; ["Gold"]}]</i>
          required: false
          type: string
        - name: relatedEntityId
          in: query
          description: "The related product offering ID by which the related product offering population requested by the client is retrieved, The replaceable product offering ID by which the replaceable product offering population requested by the client is retrieved, user would like to replace his plan with a replaceable offer \n"
          required: false
          type: string
        - name: relationType
          in: query
          description: "The type of the relation by which the related product offering population requested by the client is retrieved"
          required: false
          type: string
        - name: relationRole
          in: query
          description: |
            The business type definition of the relation by which the related product offering population requested by the client is retrieved
            like &#58;
              - RelatedDevice.
              - Add-On.
              - Accessories
          required: false
          type: string
        - name: relationId
          in: query
          description: "\"The relation where relatedEntityId is the source, and we want to get the related product offerings for. This will be obtained by the user by calling the /productOfferingRelationship endpoint first and selecting which relation to get related offers for. The relatedProductOfferings that will be returned are the targets of this relation.\" \n"
          required: false
          type: string
        - name: relationSecondaryId
          in: query
          description: "When needed by flow will represent additional offer needed as input, user wants to replace a plan (his current plan will be relatedEntityId) which is compatible with his existing 'device' (the secondary input for the replace flow)\nin case of subscription relation will represent the additional subscription offer as input (cart item id, order item id)  \n"
          required: false
          type: string
        - name: relationSecondaryType
          in: query
          description: "When needed by flow will represent the context of the relationSecondaryId, in case a replace for a bundle is needed and a product offer inside the bundle is kept \n•  relationType – populated with “replaceable”\n•  relatedEntityId – populated with current bundle productOfferID\n•  relationSecondaryId – populated with current device offerID\n•  relationSecondaryType – populated with bundle type  \n"
          required: false
          type: string
        - name: productOfferingTypeGroup
          in: query
          description: |
            The (real) type of the product offering, The service searches for any of the product, in the product offer tree which match a specific productOfferingTypeGroup
          required: false
          type: string
        - name: productOfferingGroup
          in: query
          description: |
            The reference to all product offerings in case of dynamic group, return the bundle group population in the case the group holds only policy (dynamic group), known as policyId in BundledProductConfigurationGroup of product configuration.
            supported values are&#58;
              - defined in Catalog - group in BundledGroupProductOffering
          required: false
          type: string
        - name: groupByVariantGroup
          in: query
          description: |
            Indicates whether the search results shall be grouped to their variant groups
          required: false
          type: boolean
          default: false
        - name: offset
          in: query
          description: "Requested index for start of resources to be provided in the response requested by the client \n"
          required: false
          type: integer
        - name: limit
          in: query
          description: |
            Requested number of resources to be provided in the response requested by the client
          required: false
          type: integer
        - name: sort
          in: query
          description: ' The fields by which the response is requested by the client to be sorted. The supported values are: priceRC, priceOC, startDateTime and name'
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: minPrice
          in: query
          description: |
            The minimum value used for searching a price
          required: false
          type: number
        - name: maxPrice
          in: query
          description: |
            The maximum value used for searching a price
          required: false
          type: number
        - name: priceType
          in: query
          description: |
            The type of the price, for example, OC or RC. If no value is provided, a configuration value is used. The parameter is relevant for the filtering of minPrice maxPrice
          required: false
          type: string
        - name: recurringChargePeriod
          in: query
          description: |
            The period of the recurring charge, for example, weekly, monthly
          required: false
          type: string
        - name: contextType
          in: query
          description: |
            The type of the context from which the call is performed, for example, ProductOffering (catalog), Cart, Order, Inventory without context means aleways ProductOffering
          required: false
          type: string
          x-example: Cart
        - name: contextMainIdentifier
          in: query
          description: |
            The identifier of the main entity in the context from which the call is performed, for example, cart ID or order ID
          required: false
          type: string
        - name: contextItemIdentifier
          in: query
          description: |
            The ID of the related entity - CartItemId, OrderItemId (ProductId)
          required: false
          type: string
        - name: contextIdentifier
          in: query
          description: |
            The ID of the related entity - product offering ID
          required: false
          type: string
        - name: mask
          in: query
          description: |
            The parameter of the mask query. A mask is a set of flags that impact the service and the returned fields. The supported values
            - *returnStockInformation* - Returns stock information by calling stock management.
            - *returnProductOfferingIds* - return list of product offering id only
          required: false
          type: string
        - name: "productOfferingId"
          in: "query"
          description: "The searchable product offering identifiers, the list of IDs\
            \ is limited to be paginated by client - the URI length is limited to 2048\
            \ characters"
          required: false
          type: "array"
          items:
            type: "string"
            minLength: 1
          collectionFormat: "multi"
        - name: "productOfferingName"
          in: "query"
          description: "The searchable product offering identifiers, the list of Names\
            \ is limited to be paginated by client - the URI length is limited to 2048\
            \ characters"
          required: false
          type: "array"
          items:
            type: "string"
            minLength: 1
          collectionFormat: "multi"
        - name: returnSource
          in: query
          description: |
            Indicates whether the reverse lookup target to source will be performed:
            If set to false (default), target product offering will be returned.
            If set to true, source product offering will be returned.
            Required query params: relatedEntityId, relationType, relationId.
          required: false
          type: boolean
          default: false
        - name: enableAutoComplete
          in: query
          description: |
            "Indicates whether to enable auto completion of the text search"
          required: false
          type: boolean
          default: false
        - name: disableServiceabilityCheck
          in: query
          description: |
            "In case set to true, skip the serviceability check"
          required: false
          type: boolean
          default: false
        - name: checkQualification
          in: query
          description: "Indicates whether to perform qualification check for offer if set to false do not perform the qualification check. If set to true, perform the qualification check (default)"
          required: false
          type: boolean
          default: true
        - name: groupByCategory
          in: query
          description: |
            Indicates whether the product offers are sorted by categories or not
            Note: if set to true, no additional sort can be applied
          required: false
          type: boolean
          default: false
        - name: includeExpiredOffers
          in: query
          description: "Indicates if search should return expired product offers or not."
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: |
            *OK* - The searchProductOfferRelatedCharacteristics information was retrieved successfully.
          headers:
            X-Total-Count:
              type: integer
              format: int64
              description: |
                The total number of matching resources
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductOfferingCharacteristic'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-search-ms
      x-amdocs:
        route-service: pod-search-service
        public-roles:
          - D1_ProductOfferingDiscovery_retrieve
        private-roles:
          - D1P_ProductOfferingDiscovery_read
          - FndP_APIGateway_gw
  /searchProductOffering/requestFullDistribution:
    post:
      tags:
        - searchProductOffering
      summary: Request to reload all data from CatalogOne and re-index
      description: |
        A request to initiate a full distribution process for pod search MS.
        If another request is in process, will return an Exception.
      operationId: requestFullDistribution
      consumes:
        - application/json;charset
      produces:
        - application/json;charset
      parameters: []
      responses:
        201:
          description: '*OK* - Full distribution started'
          schema:
            $ref: '#/definitions/FullDistributionRequest'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-search-ms
      x-amdocs:
        route-service: pod-search-service
        public-roles:
          - D1_ProductDiscoveryFullDistribution_create
        private-roles:
          - D1P_ProductOfferingDiscovery_write
          - FndP_APIGateway_gw
      x-dox-Since: v10.3
  /searchProductOffering/cancelFullDistribution:
    post:
      tags:
        - searchProductOffering
      summary: Request to cancel reload all data from CatalogOne
      description: |
        A request to cancel a full distribution process for pod search MS
      operationId: cancelFullDistribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: FullDistributionRequest
          description: |
            The full distribution token receievd from Catalog
          required: true
          schema:
            $ref: '#/definitions/FullDistributionRequest'
      responses:
        200:
          description: '*OK* - Full distribution canceled'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-search-ms
      x-amdocs:
        route-service: pod-search-service
        public-roles:
          - D1_ProductDiscoveryFullDistribution_cancel
        private-roles:
          - D1P_ProductOfferingDiscovery_write
          - FndP_APIGateway_gw
      x-dox-Since: v10.3
  /productOffering/{productOfferingId}:
    get:
      tags:
        - productOffering
      summary: This service retrieves detailed information of a specific product offering
      description: |
        This service retrieves discovery product offering details according  to provided ID**Mandatory&#58;**
        - Request Context
      operationId: getProductOfferingsDetails
      schemes:
        - https
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: productOfferingId
          in: path
          description: |
            The ID of the product offer
          required: true
          type: string
        - name: relatedPartySegment
          in: query
          description: "The relatedPartySegment in context, relevant only to CSR \"on-behalf\" context flow with customer role.\nUsed for qualification, eligibility , price. \nCan hold any segment as defined in customer accessor.\n"
          required: false
          type: string
        - name: salesChannel
          in: query
          description: The Sales Channel that the product offering is associated with
          required: false
          default: ALL
          type: string
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: groupByVariantGroup
          in: query
          description: |
            Indicates whether the search results shall be grouped to their variant groups
          required: false
          type: boolean
          default: false
        - name: mask
          in: query
          description: |
            The parameter of the mask query. A mask is a set of flags that impact the service and the returned fields. The supported values
            - *returnStockInformation* - Returns stock information by calling stock management. When no mask is supplied, the information about the ‘stock’ will not be returned.
            -*onlyIds* - Returnes only the ids of the search response offers (send the response as it arrives from the search MS)
          required: false
          type: string
        - name: includeAllNodes
          in: query
          description: |
            Indicates whether the full node tree is returned or only the top two levels.
            If set to false (default), only the top two levels are returned.
            If set to true, the full node tree is returned.
          required: false
          type: boolean
          default: false
        - name: checkQualification
          in: query
          description: |
            Indicates whether to perform qualification check for offer details  if set to false, do not perform the qualification check. If set to true, perform the qualification check (default).
          required: false
          type: boolean
          default: true
      responses:
        200:
          description: |
            *OK* - The product offering information was retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductOffering'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        412:
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        500:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        502:
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-dox-Microservice: "pod-productoffering-ms"
      x-amdocs:
        route-service: "pod-productoffering-service"
        public-roles:
          - "D1_ProductOfferingDiscovery_retrieve"
        private-roles:
          - "D1P_ProductOfferingDiscovery_read"
          - "FndP_APIGateway_gw"
  /productOffering/name/{productOfferingName}:
    get:
      tags:
        - "productOffering"
      summary: "This service retrieves detailed information of a specific product\
        \ offering"
      description: "This service retrieves discovery product offering details according\
        \  to provided Name**Mandatory&#58;**\n- Request Context\n"
      operationId: "getProductOfferingsDetailsByName"
      schemes:
        - "https"
      consumes:
        - "application/json;charset=utf-8"
      produces:
        - "application/json;charset=utf-8"
      parameters:
        - name: "productOfferingName"
          in: "path"
          description: "The unique name of the product offer\n"
          required: true
          type: "string"
        - name: "relatedPartyId"
          in: "query"
          description: "The relatedPartyId in context, relevant only to CSR \"on-behalf\"\
          \ context flow, used for qualification eligibility \n"
          required: false
          type: "string"
        - name: "relatedPartyRole"
          in: "query"
          description: "The relatedPartyRole in context (such as customer, user), relevant\
          \ only to CSR \"on-behalf\" context flow, used for qualification eligibility\
          \ \n"
          required: false
          type: "string"
        - name: "relatedPartySegment"
          in: "query"
          description: "The relatedPartySegment in context, relevant only to CSR \"\
          on-behalf\" context flow with customer role.\nUsed for qualification, eligibility\
          \ , price. \nCan hold any segment as defined in customer accessor.\n"
          required: false
          type: "string"
        - name: "salesChannel"
          in: "query"
          description: "The Sales Channel that the product offering is associated with\n"
          required: false
          type: "string"
          default: "ALL"
        - name: "Accept-Language"
          in: "header"
          description: "Locale of the client\n"
          required: false
          type: "string"
        - name: "groupByVariantGroup"
          in: "query"
          description: "Indicates whether the search results shall be grouped to their\
          \ variant groups\n"
          required: false
          type: "boolean"
          default: false
        - name: "checkQualification"
          in: "query"
          description: "Indicates whether to perform qualification check for offer details\
          \  if set to false, do not perform the qualification check. If set to true,\
          \ perform the qualification check (default).\n"
          required: false
          type: "boolean"
          default: true
        - name: "mask"
          in: "query"
          description: "The parameter of the mask query. A mask is a set of flags that\
          \ impact the service and the returned fields. The supported values\n- *returnStockInformation*\
          \ - Returns stock information by calling stock management. When no mask\
          \ is supplied, the information about the ‘stock’ will not be returned.\n\
          -*onlyIds* - Returnes only the ids of the search response offers (send the\
          \ response as it arrives from the search MS)\n"
          required: false
          type: "string"
        - name: "includeAllNodes"
          in: "query"
          description: "Indicates whether the full node tree is returned or only the\
          \ top two levels.\nIf set to false (default), only the top two levels are\
          \ returned.\nIf set to true, the full node tree is returned.\n"
          required: false
          type: "boolean"
          default: false
      responses:
        "200":
          description: "*OK* - The product offering information was retrieved successfully.\n"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductOffering"
        "400":
          description: "*Bad Request* - The server cannot process the request due\
            \ to a malformed syntax. The response can be caused by missing mandatory\
            \ query parameters, invalid value in the query parameters, validation\
            \ exceptions, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "*Not Found* - The server did not find anything matching the\
            \ request URI. The response can be caused by missing path parameters,\
            \ invalid web resource, and so on.\n"
          schema:
            $ref: "#/definitions/Error"
        "409":
          description: "*Conflict* - The server cannot complete the request due to\
            \ a conflict with the current state of the resource.\n"
          schema:
            $ref: "#/definitions/Error"
        "412":
          description: "*Unprocessable Entity* - The server understands the content\
            \ type of the request entity, and the syntax of the request entity is\
            \ correct, but was unable to process the contained instructions.\n"
          schema:
            $ref: "#/definitions/ValidationError"
        "500":
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
        "502":
          description: "*Bad Gateway* - The server encountered an unexpected condition\
            \ when calling another service.\n"
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "*Internal Server Error* - The server encountered an unexpected\
            \ condition that prevented it from fulfilling the request.\n"
          schema:
            $ref: "#/definitions/Error"
      x-dox-Microservice: "pod-productoffering-ms"
      x-amdocs:
        route-service: "pod-productoffering-service"
        public-roles:
          - "D1_ProductOfferingDiscovery_retrieve"
        private-roles:
          - "D1P_ProductOfferingDiscovery_read"
          - "FndP_APIGateway_gw"
  /compareProductOffering:
    post:
      tags:
        - compareProductOffering
      summary: This service compares serveral product offerings, based on the product offering IDs
      description: "This service compares product offerings, based on the product offering IDs.\n**Mandatory&#58;**\n- productOffering.id (list of ids (at least two) of the product offers to compare)\n- salesChannel (the sales channel to compare for) \n- Accept-Language (language indicaiton in the request header)\n\n\n**Business rules&#58;**\n- includeAllNodes (indicate how many levels in product offer tree should be compared - default will bring only the top two levels)\nThe compare doesn't force two identical product offering types, it shall compare characteristics for any product offer"
      operationId: compareProductOfferings
      schemes:
        - https
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: productOfferingId
          in: query
          description: |
            The details of the product offerings, based on the provided list of ID(s)
          required: true
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: includeAllNodes
          in: query
          description: |
            Indicates whether the full node tree is returned or only the top two levels.
            If set to false (default), only the top two levels are returned.
            If set to true, the full node tree is returned.
          required: false
          type: boolean
          default: false
        - name: contextType
          in: query
          description: |
            The type of the context from which the call is performed, for example, Discovery, Cart, Order, Inventory
          required: false
          type: string
          x-example: Cart
        - name: contextMainIdentifier
          in: query
          description: |
            The identifier of the main entity in the context from which the call is performed, for example, cart ID or order ID
          required: false
          type: string
        - name: contextIdentifier
          in: query
          description: |
            The ID of the related entity - product offering ID, product ID, cart item ID, or order item ID
          required: false
          type: string
        - name: checkQualification
          in: query
          description: |
            Indicates whether to perform qualification check for offer details  if set to false, do not perform the qualification check. If set to true, perform the qualification check (default).
          required: false
          type: boolean
          default: true
      responses:
        200:
          description: |
            *OK* - The compare product offering information was retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/CompareProductOffering'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-productoffering-ms
      x-amdocs:
        route-service: pod-productoffering-service
        public-roles:
          - D1_ProductOfferingDiscovery_retrieve
        private-roles:
          - D1P_ProductOfferingDiscovery_read
          - FndP_APIGateway_gw
  /productOffering/requestFullDistribution:
    post:
      tags:
        - productOffering
      summary: Request to reload all product offers data from CatalogOne
      description: |
        A request to initiate a full distribution process for pod Product Offering MS.
        If another request is in process, will return an Exception.
      operationId: requestFullDistributionProductOffer
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters: []
      responses:
        201:
          description: '*OK* - Compare Product Offering information successfully retrieved'
          schema:
            type: array
            items:
              $ref: '#/definitions/FullDistributionRequest'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-productoffering-ms
      x-amdocs:
        route-service: pod-productoffering-service
        public-roles:
          - D1_ProductDiscoveryFullDistribution_create
        private-roles:
          - D1P_ProductOfferingDiscovery_write
          - FndP_APIGateway_gw
      x-dox-Since: v10.3
  /calculateProductOfferingPriceOption:
    post:
      tags:
        - price
      summary: This service retrieves product offering price options
      description: |
        "This service retreives price information upon a distinct change
        in characteristics or ProductOfferingTerm\n
        **Mandatory&#58;**
        Product Offering ID (ProductOfferingPriceOption.id)
        Conditioned Characteristics (ConditionPriceCharacteristic the characteristic modified which influence
        the price)- ProductOfferingTerm (the PriceTerm which affects the price)
      operationId: CalculateProductOfferingPriceOption
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: relatedPartyId
          in: query
          description: "The relatedPartyId in context, relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartyRole
          in: query
          description: "The relatedPartyRole in context (such as customer, user), relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartySegment
          in: query
          description: "The relatedPartySegment in context, relevant only to CSR \"on-behalf\" context flow with customer role.\nUsed for qualification, eligibility , price. \nCan hold any segment as defined in customer accessor.\n"
          required: false
          type: string
        - name: operationContext
          in: query
          description: product offer ID of the offer to caluclate price when quantified
          required: true
          type: string
        - in: body
          name: ProductOfferingPriceOption
          description: "The price options for the product offer which fits the characteristics requested \n"
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductOfferingPriceOption'
            minItems: 1
      responses:
        200:
          description: |
            *OK* - The price options for product offering were retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductOfferingPriceOption'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-productoffering-ms
      x-amdocs:
        route-service: pod-productoffering-service
        public-roles:
          - D1_ProductOfferingDiscovery_retrieve
        private-roles:
          - D1P_ProductOfferingDiscovery_read
          - FndP_APIGateway_gw
  /calculateQuantifiedPriceOption:
    post:
      tags:
        - price
      summary: This service retrieves product offering price options
      description: |
        "This service retreives price information for multiple product offerings, so if there is a possibiltiy to buy a quantity of product offer, consumer will get a list of prices for default number to the max number
        **Mandatory&#58;**
        Product Offering ID (ProductOfferingPriceOption.id)
      operationId: CalculateQuantifiedPriceOption
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: relatedPartyId
          in: query
          description: "The relatedPartyId in context, relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartyRole
          in: query
          description: "The relatedPartyRole in context (such as customer, user), relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartySegment
          in: query
          description: "The relatedPartySegment in context, relevant only to CSR \"on-behalf\" context flow with customer role.\nUsed for qualification, eligibility , price. \nCan hold any segment as defined in customer accessor.\n"
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: contextType
          in: query
          description: |
            The type of the context from which the call is performed, for example, ProductOffering (catalog), Cart, Order, Inventory without context means aleways ProductOffering
          required: false
          type: string
          x-example: Cart
        - name: contextItemMainIdentifier
          in: query
          description: |
            The ID of the related entity - CartId, OrderId
          required: false
          type: string
        - name: contextItemIdentifier
          in: query
          description: |
            The ID of the related entity - CartItemId, OrderItemId (ProductId)
          required: false
          type: string
        - name: operationRootContext
          in: query
          description: product offer ID of the parent bundle
          required: true
          type: string
        - name: operationContext
          in: query
          description: product offer ID of the offer to caluclate price when quantified
          required: true
          type: string
        - name: quantity
          in: query
          description: quantity of offer to calculate instead of maximum cardinality
          required: false
          type: string
      responses:
        200:
          description: |
            *OK* - The price options for product offering were retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductOfferingQuantityPriceOption'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-productoffering-ms
      x-amdocs:
        route-service: pod-productoffering-service
        public-roles:
          - D1_ProductOfferingDiscovery_retrieve
        private-roles:
          - D1P_ProductOfferingDiscovery_read
          - FndP_APIGateway_gw
  /category:
    get:
      tags:
        - category
      summary: Retrieve list of categories
      description: |
        Retrieves catalog browsing categories and child categories according to depth provided.
      operationId: getCategories
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: categoryDepth
          in: query
          description: |
            If 0 or not found return all tree , if > 0 then return until the supplied depth
            (the depth is collated from the category-id provided  if not provided from root category)
          required: false
          type: integer
        - name: includeFilterCharacteristics
          in: query
          description: |
            Include Characteristics
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: |
            *OK* - Categories information successfully retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-category-ms
      x-amdocs:
        route-service: pod-category-service
        public-roles:
          - D1_ProductOfferingDiscovery_retrieve
        private-roles:
          - D1P_ProductOfferingDiscovery_read
          - FndP_APIGateway_gw
  /category/{categoryId}:
    get:
      tags:
        - category
      summary: Retrieve specific category per the category ID
      description: |
        Retrieves catalog browsing categories information,which includes all sub categories
      operationId: getCategory
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: categoryId
          in: path
          description: |
            The ID of the category
          required: true
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: categoryDepth
          in: query
          description: |
            If 0 or not found return all tree , if > 0 then return until the supplied depth
            (the depth is collated from the category-id provided  if not provided from root category)
          required: false
          type: integer
        - name: includeFilterCharacteristics
          in: query
          description: |
            Include Characteristics
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: |
            *OK* - Categories information successfully retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-category-ms
      x-amdocs:
        route-service: pod-category-service
        public-roles:
          - D1_ProductOfferingDiscovery_retrieve
        private-roles:
          - D1P_ProductOfferingDiscovery_read
          - FndP_APIGateway_gw
  /category/name/{categoryName}:
    get:
      tags:
        - category
      summary: Retrieve specific category per the category name
      description: |
        Retrieves catalog browsing categories information, which includes all sub categories
      operationId: getCategoryByName
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: categoryName
          in: path
          description: |
            The name that serves as the ID of the category
          required: true
          type: string
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: categoryDepth
          in: query
          description: |
            If 0 or not found return all tree, if > 0 then return until the supplied depth
            (the depth is collated from the category-id provided  if not provided from root category)
          required: false
          type: integer
        - name: includeFilterCharacteristics
          in: query
          description: |
            Include Characteristics
          required: false
          type: boolean
          default: false
      responses:
        "200":
          description: |
            *OK* - Categories information successfully retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        "400":
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        "412":
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        "500":
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        "502":
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-category-ms
      x-amdocs:
        route-service: pod-category-service
        public-roles:
          - D1_ProductOfferingDiscovery_retrieve
        private-roles:
          - D1P_ProductOfferingDiscovery_read
          - FndP_APIGateway_gw
  /category/categoryPathToRoot:
    get:
      tags:
        - category
      summary: Retrieve list of categories from a specific category (by name or id) to the root category
      description: |
        Retrieves catalog browsing categories information,from the category to the root category - categoryName or categoryId is required
      operationId: getCategoryPathToRoot
      schemes:
        - https
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - name: categoryId
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: categoryName
          in: query
          description: |
            The category name identifiers by which the product offerings are requested by the client
            The supported category values are defined in the product catalog
            <i>Example&#58; categoryName==AddOns</i>
          required: false
          type: array
          items:
            type: string
            minLength: 1
          collectionFormat: multi
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: includeFilterCharacteristics
          in: query
          description: |
            Include Characteristics
          required: false
          type: boolean
          default: true
      responses:
        200:
          description: |
            *OK* - Categories information successfully retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/CategoryPathToRoot'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-category-ms
      x-amdocs:
        route-service: pod-category-service
        public-roles:
          - D1_ProductOfferingDiscovery_retrieve
        private-roles:
          - D1P_ProductOfferingDiscovery_read
          - FndP_APIGateway_gw
  /category/requestFullDistribution:
    post:
      tags:
        - category
      summary: Request to reload all category data from CatalogOne
      description: |
        A request to initiate a full distribution process for getting Product Offering Category MS.
        If another request is in process, will return an Exception.
      operationId: fullDistributionCategory
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        201:
          description: |
            *Success* - the process has created successfuly.
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-category-ms
      x-amdocs:
        route-service: pod-category-service
        public-roles:
          - D1_ProductDiscoveryFullDistribution_create
        private-roles:
          - D1P_ProductOfferingDiscovery_write
          - FndP_APIGateway_gw
  /calculatePrice:
    post:
      tags:
        - price
      summary: (Internal) Calculates the product offering price
      description: |
        This service encapsulates all pricing business from invoking client microservices.
        It delegates the calculation of the price to the Product Offering Price or the Product Offering Quote microservices based on pricing metadata.
        The service also performs pricing optimizations, such as maintaining runtime cache and more.
        The service returns null values when a given ID is not found or invalid.
      operationId: calculatePrice
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: relationType
          in: query
          description: "The type of the relation by which the related product offering population requested by the client is retrieved"
          required: false
          type: string
        - name: salesChannel
          in: query
          description: |
            The Sales Channel that the product offering is associated with
          required: false
          type: string
          default: ALL
        - name: relatedPartyId
          in: query
          description: "The relatedPartyId in context, relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartyRole
          in: query
          description: "The relatedPartyRole in context (such as customer, user), relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartySegment
          in: query
          description: "The relatedPartySegment in context, relevant only to CSR \"on-behalf\" context flow with customer role.\nUsed for qualification, eligibility , price. \nCan hold any segment as defined in customer accessor.\n"
          required: false
          type: string
        - in: body
          name: PricingProductOfferingInput
          description: |
            The prices for the product offering configuration
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PricingProductOfferingInput'
      responses:
        200:
          description: |
            *OK* - The price for the product offering was found successfully.
          headers:
            Etag:
              type: string
              description: |
                entity tag
              x-dox-Since: v10.2
          schema:
            type: array
            items:
              $ref: '#/definitions/PricingProductOfferingOutput'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-price-ms
      x-dox-InternalAPI: true
      x-amdocs:
        route-service: pod-price-service
        private-roles:
          - D1P_ProductOfferingDiscovery_read
  /promotionQualification/qualifyPotentialPromotions:
    post:
      tags:
        - promotionQualification
      summary: Qualify Potential Promotions for product offering
      description: |
        This task qualifies potential promotions for a given context of sales channel, customer, and product offerings.
      operationId: qualifyPotentialPromotions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Accept-Language
          in: header
          description: |
            Locale of the client
          required: false
          type: string
        - name: relatedPartyId
          in: query
          description: "The relatedPartyId in context, relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartyRole
          in: query
          description: "The relatedPartyRole in context (such as customer, user), relevant only to CSR \"on-behalf\" context flow, used for qualification eligibility \n"
          required: false
          type: string
        - name: relatedPartySegment
          in: query
          description: "The relatedPartySegment in context, relevant only to CSR \"on-behalf\" context flow with customer role.\nUsed for qualification, eligibility , price. \nCan hold any segment as defined in customer accessor.\n"
          required: false
          type: string
        - in: body
          name: DiscoveryPotentialPromotionQualification
          description: The promotion qualification items
          required: true
          schema:
            $ref: '#/definitions/discoveryPotentialPromotionQualification'
      responses:
        200:
          description: |
            *OK* - The qualification of the potential promotion qualification was performed successfully.
          schema:
            $ref: '#/definitions/discoveryPotentialPromotionQualification'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed syntax. The response can be caused by missing mandatory query parameters, invalid value in the query parameters, validation exceptions, and so on.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI. The response can be caused by missing path parameters, invalid web resource, and so on.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict with the current state of the resource.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when calling another service.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/Error'
      x-dox-Microservice: pod-price-ms
      x-amdocs:
        route-service: pod-price-service
        public-roles:
          - D1_ProductOfferingDiscovery_retrieve
        private-roles:
          - D1P_ProductOfferingDiscovery_read
          - FndP_APIGateway_gw
definitions:
  ProductOffering:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the product offering
      href:
        type: string
      name:
        type: string
        description: |
          The text ID of the product offering
      localizedName:
        type: string
        description: |
          The localized name of the product offering
      description:
        type: string
        description: |
          The localized description of the product offering
      isBundle:
        type: boolean
        description: |
          Indicates whether the product offering represents a single product offering (false) or a bundle of product offerings (true)
      mustBeBundled:
        type: boolean
        description: Determines if the product offering can be sold as a standalone (false), or available only as part of a bundle or bundles (true).
      paymentMngType:
        type: string
        description: |
          The payment management type of the product offering - pre-paid, post-paid, or any
      validFor:
        $ref: '#/definitions/TimePeriod'
      productOfferingType:
        type: string
        description: |
          The type of the product offering - can represent the LOB or other relevant types like shipping offer
      productOfferingTypeGroup:
        type: string
        description: The type group of the product offering
      offerClassification:
        type: string
        description: The field will be updated with different offer classifications(for instance - Customer offer, Subscriber offer).
      isTopItem:
        type: boolean
        description: |
          Indicates whether the item is marked as top from the marketing perspective. Typically, gets priority when a list of offerings is displayed.
      isEnabledBy:
        type: boolean
        description: |
          Indicates whether the product offering default configuration has a dependency of "enabled by" for another offer.
          If marked true, the "enabled by" product relationship is created.
          Note that the relationship is between two products, which are linked to the catalog product specification.
      valueRank:
        type: integer
        description: |
          The value rank of the product offering
      primary:
        type: boolean
        description: Indicates that the offering represents primary network service
      serialized:
        type: boolean
        description: Indicates if this product offering is maintained in the inventory instance by instance (true), or if a single product offering instance can represent bulk quantity of the product offering (false).
      isRestricted:
        type: boolean
        description: Indicates if the Product Offering belongs to Product Specification that has definition of allowed number of product specification or has Product Specification that belongs to Product Specification Type with definition of allowed number of product specification type
        default: false
      productOfferingCharacteristic:
        type: array
        description: |
          The list of characteristics for the product offering.
          The type of the characteristic is determined by the related characteristic property entity.
        items:
          $ref: '#/definitions/ProductOfferingCharacteristic'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductOfferingExtensions
        x-dox-NotImplemented: false
      metadata:
        type: array
        items:
          $ref: '#/definitions/Metadata'
      bundledProductOffering:
        type: array
        description: |
          The relation between a bundle product offering entity and its bundled product offering entities
        items:
          $ref: '#/definitions/BundledProductOffering'
      bundledProdOfferGroupOption:
        type: array
        description: |
          The group option, by which a bundle product offering entity is related to its bundled product offering entities (that is, the selection group)
        items:
          $ref: '#/definitions/BundledProdOfferGroupOption'
      parentProdOfferGroupOption:
        type: array
        description: the list of groups that item belongs to
        items:
          $ref: '#/definitions/ParentProdOfferGroupOption'
      productSpecification:
        $ref: '#/definitions/ProductSpecificationRef'
      CategoryRef:
        type: array
        items:
          $ref: '#/definitions/CategoryRef'
      variantGroup:
        $ref: '#/definitions/VariantGroup'
      productOfferingTotalPrice:
        type: array
        items:
          $ref: '#/definitions/DiscoveryPrice'
      productOfferingPrice:
        type: array
        items:
          $ref: '#/definitions/DiscoveryPrice'
      productOfferingStandalonePrice:
        type: array
        items:
          $ref: '#/definitions/DiscoveryPrice'
      productOfferingTerm:
        type: array
        items:
          $ref: '#/definitions/ProductOfferingTerm'
      attachment:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      immediatePromotion:
        type: array
        items:
          $ref: '#/definitions/ImmediatePromotion'
        x-dox-DesignNote: |
          Immediate Promotion with details
      relatedImmediatePromotion:
        type: array
        items:
          $ref: '#/definitions/RelatedImmediatePromotion'
        x-dox-DesignNote: |
          A reference to the relatedImmediatePromotion entity.
      stock:
        type: array
        items:
          $ref: '#/definitions/StockItem'
      durationPolicy:
        $ref: '#/definitions/DurationPolicy'
      pricingImpactEntity:
        type: array
        description: "impacted items \n"
        items:
          $ref: '#/definitions/PricingImpactEntityRef'
  TimePeriod:
    type: object
    properties:
      startDateTime:
        type: string
        format: date-time
        description: |
          Start date and time of the period
      endDateTime:
        type: string
        format: date-time
        description: |
          End date and time of the period
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: TimePeriodExtensions
        x-dox-NotImplemented: true
    description: |
      Time period
  ProductOfferingCharacteristic:
    type: object
    properties:
      name:
        type: string
        description: |
          The text ID of the product offering characteristic
      localizedName:
        type: string
        description: |
          The localized name of the product offering characteristic
      valueType:
        type: string
        description: |
          The value type of the characteristic
      value:
        type: array
        description: |
          The available values under the characteristic
        items:
          $ref: '#/definitions/CharacteristicValue'
      productSpecification:
        $ref: '#/definitions/ProductSpecificationRef'
      characteristicsMetadata:
        type: array
        description: "The metadata describing the characteristic  \n"
        items:
          $ref: '#/definitions/Metadata'
    description: |
      The list of the descriptive characteristics for the Discovery flows derived from the product offering and included in the product specification (if exists)
  CharacteristicValue:
    type: object
    properties:
      value:
        type: string
        description: |
          The value of the characteristic
      localizedValue:
        type: string
        description: |
          The localized value of the characteristic
      valueFrom:
        type: string
        description: |
          For a range filter, the lower limit of the value
      valueTo:
        type: string
        description: |
          For a range filter, the upper limit of the value
      unitOfMeasure:
        type: string
        description: |
          The unit of measurement of the product offering characteristic value
      default:
        type: boolean
        description: |
          Indicates whether the product offering characteristic value is the default value, as defined in the product offering catalog configuration.
          Only one value can be selected as the default.
          For a range, the selected range is the default.
      descriptiveCharacteristicsMetadata:
        type: array
        items:
          $ref: '#/definitions/Metadata'
    description: |
      The available values of the descriptive characteristic
  Metadata:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the metadata
      value:
        type: string
        description: "The value of the metadata, multiple values may be handled with comma seperated \n"
      type:
        type: string
        description: "The type of metadata    \n"
      propertySetName:
        type: string
        description: "The parameter that metadata related      \n"
    description: |
      Metadata object
  ProductSpecificationRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the product specification
      name:
        type: string
        description: |
          The name of the product specification
      type:
        type: string
        description: |
          The type of the product specification
      href:
        type: string
        description: |
          The reference to the product specification resource
      productSpecificationTypeId:
        type: string
        description: |
          The product specification type Id
      productSpecificationTypeName:
        type: string
        description: |
          The product specification type name
    description: |
      The reference to the product specification
  BundledProductOffering:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the bundled product offering
      href:
        type: string
        description: |
          The reference to the bundled product offering
      name:
        type: string
        description: |
          The name of the bundled product offering
      localizedName:
        type: string
        description: |
          The localized name of the bundled product offering
      description:
        type: string
        description: |
          The description of the bundled product offering
      productOfferingType:
        type: string
        description: The type of the product offering
      productOfferingTypeGroup:
        type: string
        description: The type group of the product offering
      bundledProductOffering:
        type: array
        description: "The child bundle product offering \n"
        items:
          $ref: '#/definitions/BundledProductOffering'
      bundledProdOfferOption:
        type: array
        description: |
          The upper and lower limits of the product offerings that can be purchased as part of the bundle product offering
        items:
          $ref: '#/definitions/BundledProdOfferOption'
      relatedImmediatePromotion:
        type: array
        items:
          $ref: '#/definitions/RelatedImmediatePromotion'
        x-dox-DesignNote: |
          A reference to the relatedImmediatePromotion entity.
    description: |
      The bundle product offering object
  BundledProdOfferOption:
    type: object
    properties:
      numberRelOfferLowerLimit:
        type: string
        description: number of Related Offer Lower Limit
      numberRelOfferUpperLimit:
        type: string
        description: number of Related Offer Upper Limit
      defaultRelOfferNumber:
        type: string
        description: default number of Related Offer Upper Limit
      pricingImpactEntity:
        type: array
        description: "impacted items \n"
        items:
          $ref: '#/definitions/PricingImpactEntityRef'
      itemTotalPrice:
        type: array
        items:
          $ref: '#/definitions/DiscoveryPrice'
      itemPrice:
        type: array
        items:
          $ref: '#/definitions/DiscoveryPrice'
    description: |
      The lower and upper limits for a product offering that can be purchased as part of the related bundled product offering.
      The values can range from 0 to unlimited.
  DiscoveryPrice:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
        description: |
          The short descriptive name, such as subscription price
      description:
        type: string
        description: |
          The narrative that explains in detail the semantics of the price
      priceType:
        type: string
        description: |
          The type of the price - recurring, one time, or usage
      unitOfMeasure:
        type: string
        description: |
          The unit of measurement applicable for the price type of allowance of the product offering, for example, GB, minutes, and so on
      recurringChargePeriod:
        type: string
        description: |
          The period to repeat the application of the price, such as month, week, and so on
      recurringChargePeriodLength:
        type: integer
        description: "The period length of the recurring charge          \n"
      taxIncluded:
        type: string
        description: Indicates if the price is defined in the catalog one as tax included or as tax excluded. Valid Values - Excluded, Included
      role:
        type: string
        description: |
          The role of the price, for example, price, bundle price alteration, and so on
      price:
        $ref: '#/definitions/Price'
      finalPrice:
        $ref: '#/definitions/Price'
      standalonePrice:
        $ref: '#/definitions/Price'
      immediatePayOption:
        $ref: '#/definitions/ImmediatePayOption'
      installmentOption:
        $ref: '#/definitions/InstallmentOption'
      productOfferingPriceRelationship:
        $ref: '#/definitions/ProductOfferingPriceRelationship'
      priceAlteration:
        type: array
        description: |
          The altered price for the product offering
        items:
          $ref: '#/definitions/PriceAlteration'
  Price:
    type: object
    properties:
      taxIncludedAmount:
        $ref: '#/definitions/Money'
      dutyFreeAmount:
        $ref: '#/definitions/Money'
      taxAmount:
        $ref: '#/definitions/Money'
      taxRate:
        type: number
        format: float
      percentage:
        type: number
        format: float
      priceReduction:
        $ref: '#/definitions/Money'
      priceOverride:
        $ref: '#/definitions/Money'
      priceRecordId:
        type: string
        description: |
          The unique identifier of the price in the pricing domain.
      impactingPriceParameter:
        type: array
        description: |
          The parameters that impact the price
        items:
          $ref: '#/definitions/PriceParam'
      appliedTax:
        type: array
        items:
          $ref: '#/definitions/AppliedTax'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PriceExtensions
        x-dox-NotImplemented: true
    description: |
      The price of current catalog item. It is set to null if the price record is
      missing or if there is any exception.
  Money:
    type: object
    properties:
      unit:
        type: string
        description: |
          The currency of the price
      value:
        type: number
        description: |
          The amount of the price
    description: |
      The price and currency of the catalog item
  PriceParam:
    type: object
    properties:
      type:
        type: string
        description: |
          The type of the parameter
      name:
        type: string
        description: |
          The name of the parameter
      value:
        type: string
        description: |
          The value of the parameter
    description: |
      The parameters that may impact/impact the price
  AppliedTax:
    type: object
    required:
      - taxAmount
      - taxDefinition
      - taxableAmount
    properties:
      taxDefinition:
        $ref: '#/definitions/TaxDefinition'
      taxAmount:
        $ref: '#/definitions/Money'
      taxableAmount:
        $ref: '#/definitions/Money'
      periodCoverage:
        $ref: '#/definitions/TimePeriod'
      characteristic:
        type: array
        items:
          $ref: '#/definitions/Characteristic'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: AppliedTaxExtensions
        x-dox-NotImplemented: true
    description: Calculated tax response
  TaxDefinition:
    type: object
    required:
      - exemptionType
      - isExemption
      - taxJurisdiction
      - taxRate
      - taxType
      - validFor
    properties:
      name:
        type: string
        description: The display name of tax type
      taxRate:
        type: number
        format: float
        description: Rate of tax
      taxType:
        type: string
        description: VAT/GST etc
      category:
        type: string
        description: Luxury/Standard etc
      isExemption:
        type: boolean
        description: Where the tax definition has exemption defined on it
      exemptionType:
        type: string
        description: Exemption type. Valid Values - Customer, Service, Jurisdiction, None.
      validFor:
        $ref: '#/definitions/TimePeriod'
      taxJurisdiction:
        $ref: '#/definitions/TaxJurisdiction'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: TaxDefinitionExtensions
        x-dox-NotImplemented: true
    description: Tax definition
  TaxJurisdiction:
    type: object
    required:
      - level
      - name
    properties:
      name:
        type: string
      level:
        type: string
      id:
        type: string
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: TaxJurisdictionExtensions
        x-dox-NotImplemented: true
  Characteristic:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      valueType:
        type: string
        description: |
          Value type of the characteristic
        x-dox-NotImplemented: true
  ImmediatePayOption:
    type: object
    properties:
      payOption:
        type: string
        description: |
          The immediate pay option:
          <ul>
          <li> *MUST* - The price must be paid immediately
          <li> *MAY* - The price might be paid immediately
          </ul>
      payAmount:
        $ref: '#/definitions/Money'
      minPayAmount:
        $ref: '#/definitions/Money'
      payImmediately:
        type: boolean
        description: |
          Indicates whether the prcie included in the immediate payment.
          If the pay option is set to MUST, this indication is set to true.
          If the pay option is set to MAY, this indication is set to either true or false based on a customer decission.
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ImmediatePayOptionExtensions
        x-dox-NotImplemented: true
    description: |
      The payment options for the product offering price payment. The payment options can indicate whether the price must or might be paid immediatelly.
      In addition, the payment options include an indication whether the price should be included in the immediate payment or not.
      If the payment option is set to must, this indication is set to true. Otherwise, if the payment option is set to might, the indication is set to either
      true or false based on a customer decission.
  InstallmentOption:
    type: object
    properties:
      id:
        type: string
        description: |
          The identifier of the installment option
      installmentOption:
        type: string
        description: |
          Indicates if the installment option is optional / mandatory
      numberOfInstallments:
        type: integer
        description: |
          The number of installments
      minNumberOfInstallments:
        type: integer
        description: |
          The minimal number of installments
      maxNumberOfInstallments:
        type: integer
        description: |
          The maximal number of installments
      defaultNumberOfInstallments:
        type: integer
        description: |
          The number of installments
      downPayment:
        $ref: '#/definitions/PaymentAmount'
      minDownPayment:
        $ref: '#/definitions/PaymentAmount'
      maxDownPayment:
        $ref: '#/definitions/PaymentAmount'
      defaultDownPayment:
        $ref: '#/definitions/PaymentAmount'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: InstallmentOptionExtensions
        x-dox-NotImplemented: true
    description: |
      Represents an installment option
  PaymentAmount:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Money'
      percentage:
        type: number
        format: float
        description: |
          Represents the percentage that the amount represents out of the price
      taxIncludedAmount:
        $ref: '#/definitions/Money'
      dutyFreeAmount:
        $ref: '#/definitions/Money'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PaymentAmountExtensions
        x-dox-NotImplemented: true
    description: |
      Represents a payment amount
  ProductOfferingPriceRelationship:
    type: object
    required:
      - id
      - type
    properties:
      id:
        type: string
        description: |
          The identifier of the related PricingProductOfferingPrice entity
      type:
        type: string
        description: |
          The relation type
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductOfferingPriceRelationshipExtensions
        x-dox-NotImplemented: true
    description: |
      The relation between PricingProductOfferingPrice entities
  PriceAlteration:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the price alteration
      description:
        type: string
        description: |
          The description of the price alteration
      priceType:
        type: string
        description: |
          The type of the price&#58; recurring, one-time, or usage
      alterationType:
        type: string
      recurringChargePeriodType:
        type: string
        description: |
          The type of the recurring charge period, such as month, week, and so on
      recurringChargePeriodLength:
        type: integer
        description: |
          The length of the recurring charge period
      unitOfMeasure:
        type: string
        description: |
          The unit representing how a product offering is available at the offered
          price, such as minutes, GB, and so on
      applicationDuration:
        type: integer
        description: |
          The duration of the price alteration on the product offering, for example&#58; two months free of charge for the recurring charge
      promotionActionId:
        type: string
        description: |
          The ID of the promotion action
      immediatePromotionId:
        type: string
        description: |
          The ID of the immediate promotion instance
      alterationProductOfferingPriceId:
        type: string
        description: |
          The catalog identifier of the product offering price representing this price alteration
      alterationBundleProductOfferingId:
        type: string
        description: |
          The catalog identifier of the bundle ProductOffering where this price alteration is attached. This identifier will be provided in the input as part of the PricingProductOffering heirarchy.
      alterationApplyOrder:
        type: integer
        description: "The order of the alteration price applience on the price \n"
      chargeType:
        type: string
        description: "The charge type that the price alteration represents. The supported values are&#58;<ul><li>debit<li>discount<li>credit</ul> \n"
      price:
        $ref: '#/definitions/Price'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PriceAlterationExtensions
        x-dox-NotImplemented: true
    description: |
      The price alteration. An amount, usually of money, that modifies the price charged for an item
  RelatedImmediatePromotion:
    type: object
    properties:
      id:
        type: string
        description: |
          The instance ID of the immediate promotion
      itemQualificationType:
        type: string
        description: |
          The type of qualification result for the item - either trigger or benefit
    description: |
      The reference to the immediate promotion object
    example:
      itemQualificationType: itemQualificationType
      id: id
    x-dox-Since: v10.2
  BundledProdOfferGroupOption:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the group option
      localizedName:
        type: string
        description: |
          The localized name of the group option
      groupOptionId:
        type: string
        description: |
          The ID of the group option
      description:
        type: string
        description: |
          The description of the group option
      numberRelOfferLowerLimit:
        type: string
        description: |
          The minimal number of bundled product offering entities in the group
      numberRelOfferUpperLimit:
        type: string
        description: |
          The maximal number of bundled product offering entities in the group
      bundleSameOffer:
        type: boolean
        description: |
          Indicates whether the group option allows bundling of the same product offering more than once
      url:
        type: string
        description: |
          The dynamic definition of a relation to the bundled product offerings. This property
          includes a hyperlink that is populated only if the bundled product offering group option
          has a BundledGroupPolicy entity defined in the catalog (that is, defines a relation
          to the bundled product offerings in a dynamic way using categories, characteristics, and so on).
          The hyperlink includes the URI of a REST service that enables fetching related offers by policy ID.
      bundledProductOffering:
        type: array
        description: |
          The relation between the bundle product offering and its related product offerings
        items:
          $ref: '#/definitions/BundledGroupProductOffering'
    description: |
      The selection rules for a group of offers within the bundle. The object stores the upper the lower limits
      for the selection of offers within the group and the indication whether the same offer can be included more than once.
      One or more of these offers can be selected by default before consumers apply their choices. This selection
      is indicated by defaultRelOfferNumber (in BundledProdOfferOption) of the relevant offers in the group. Alternatively,
      the offers that can be purchased as part of the bundle are an open group defined by a general criteria.
      In this case BundledProdOfferGroupOption will refer to Bundle Group Policy.
  BundledGroupProductOffering:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the bundled product offering
      href:
        type: string
        description: |
          The reference to the bundled product offering
      name:
        type: string
        description: |
          The name of the bundled product offering
      localizedName:
        type: string
        description: |
          The localized name of the bundled product offering
      description:
        type: string
        description: |
          The description of the bundled product offering
      productOfferingType:
        type: string
        description: "The type of the product offering \n"
      productOfferingTypeGroup:
        type: string
        description: The type group of the product offering
      itemTotalPrice:
        type: array
        items:
          $ref: '#/definitions/DiscoveryPrice'
      itemPrice:
        type: array
        items:
          $ref: '#/definitions/DiscoveryPrice'
      pricingImpactEntity:
        type: array
        description: "impacted items \n"
        items:
          $ref: '#/definitions/PricingImpactEntityRef'
      relatedImmediatePromotion:
        type: array
        items:
          $ref: '#/definitions/RelatedImmediatePromotion'
        x-dox-DesignNote: |
          A reference to the relatedImmediatePromotion entity.
      default:
        type: boolean
        description: Indicates whether this is the default product offering that the user sees
    description: |
      The relation between the bundle product offering group and its bundled product offerings
  ParentProdOfferGroupOption:
    type: object
    properties:
      groupOptionId:
        type: string
        description: |
          The ID of the group option
    description: "The list of “Offer group id” that this offer is contained in           \n"
  CategoryRef:
    properties:
      id:
        type: string
        description: |
          The ID of this 'category'
      name:
        type: string
        description: |
          The name of this 'category'
      localizedName:
        type: string
        description: |
          Localized category name
      code:
        type: string
        description: "The unique name         \n"
      href:
        type: string
        format: url
        description: |
          The href to the 'category'
        readOnly: true
    description: |
      A reference to an 'category'
  VariantGroup:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the variant group
      localizedName:
        type: string
        description: |
          The localized name of the variant group
      localizedDescription:
        type: string
        description: |
          The localized description of the variant group
      variantGroupOfferings:
        type: array
        description: |
          The array of the variant group members including the source product offering
        items:
          $ref: '#/definitions/VariantGroupOfferings'
    description: |
      The variant group object
  VariantGroupOfferings:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the product offering
      href:
        type: string
        description: |
          The URL to each group member
      default:
        type: boolean
        description: |
          Indicates whether the group member is the default member of the group
      variantCharacteristics:
        type: array
        description: |
          The array of pointers to unique characteristics of the group member over other variants
        items:
          $ref: '#/definitions/ProductOfferingCharacteristic'
      variantProductOfferingCharacteristics:
        type: array
        description: |
          The array of pointers to unique characteristics of the product offering such as payment options
        items:
          $ref: '#/definitions/ProductOfferingCharacteristic'
    description: |
      The members of the variant group
  ProductOfferingTerm:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the product offering term
      localizedName:
        type: string
        description: |
          The name of the product offering term used for display
      description:
        type: string
        description: |
          The description of the product offering term
      type:
        type: string
        description: |
          The type of the product offering term, for example, Commitment.
      duration:
        $ref: '#/definitions/Quantity'
      attachment:
        type: array
        description: |
          The object that describes the product offering through a video, pictures, and so on.
        items:
          $ref: '#/definitions/Attachment'
      default:
        type: boolean
        description: |
          Indicates whether the product offering term is the default term presented to users.
    description: |
      The terms of product offering, that is, the condition under which the product offering is available to customers.
      For example, the product offering can be offered with multiple commitment periods.
  Quantity:
    type: object
    properties:
      units:
        type: string
        description: |
          Units that are associated with the quantity
      amount:
        type: number
        description: |
          Amount that is associated with the quantity
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: QuantityExtensions
        x-dox-NotImplemented: true
    description: |
      Quantity of a resource
  Attachment:
    type: object
    properties:
      name:
        type: string
        description: |
          The unique ID of the attachment in the element to which it is related
      type:
        type: string
        description: |
          The attachment type, such as a video or a picture
      description:
        type: string
        description: |
          The narrative text describing the content of the attachment
      url:
        type: string
        description: |
          The uniform resource locator, which is a web page address (a subset of the URI)
      mimeType:
        type: string
        description: |
          The attachment MIME type, such as an extension file for a video, a picture, or a document
    description: |
      The object that describes the product offering through a video, pictures, and so on.
      Typically, pictures are attached to the product specification, but it is possible to attach pictures or other materials
      to the product offerings as well to enable illustrative images for bundles.
  ImmediatePromotion:
    type: object
    properties:
      id:
        type: string
        description: |
          The instance ID of the immediate promotion
      status:
        type: string
        description: |
          The status of the qualified promotion. The status can have the following values:

          - 'add' - For a new immediate promotion
          - 'keep' - For an existing product promotion that remains as the result of reevaluation
          - 'revoke' - For an existing product promotion that is revoked as the result of reevaluation
          - 'update' - For an existing product promotion that is updated as the result of reevaluation (meaning one of the existing trigger or benefit items is added or removed)
      state:
        type: string
        description: |
          The apply state of the qualified promotion. The state can have the following values:

          - 'applied' - For an immediate promotion that all of it's benefits are applied
          - 'notApplied' - For an immediate promotion that none of it's benefits are applied
          - 'partiallyApplied' - For an immediate promotion that part of it's benefits are applied
          - 'pendingApply' - Received in the request for an immediate promotion for which certain benefits, which are selected externally by a consuming application, should be applied
      promotion:
        $ref: '#/definitions/PromotionRef'
      triggerItem:
        type: array
        items:
          $ref: '#/definitions/TriggerItem'
        x-dox-DesignNote: |
          A reference to the TriggerItem  definition.
      benefitItem:
        type: array
        items:
          $ref: '#/definitions/BenefitItem'
        x-dox-DesignNote: |
          A reference to the Benefit definition.
    description: |
      The reference to the immediate promotion object
    x-dox-Since: v10.2
  PromotionRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the promotion
      name:
        type: string
        description: |
          The name of the promotion
      href:
        type: string
        format: url
        description: |
          The self-reference to the promotion
        readOnly: true
      description:
        type: string
        description: |
          The description of the promotion for the business user
      type:
        type: string
        description: |
          The type of the promotion
      validFor:
        $ref: '#/definitions/TimePeriod'
      priority:
        type: integer
        description: |
          The priority of the promotion
    description: |
      The reference to the promotion object
    x-dox-Since: v10.2
    x-dox-DesignNote: |
      Promotion description for Business user
  TriggerItem:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the trigger item
      itemType:
        type: string
        description: |
          The type of the trigger item
      promotionCriteriaGroupId:
        type: string
        description: |
          The ID of the promotion criteria group (root or nested) as part of which the item is qualified as a trigger item
      pathToRoot:
        type: string
        description: |
          The path from the current item in the product offering structure to the root. This property is populated if the trigger item is a nested item.
      href:
        type: string
        format: url
        description: |
          The self-reference to the trigger item
    description: |
      The reference to the trigger item object
    x-dox-Since: v10.2
  BenefitItem:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the benefit item
      itemType:
        type: string
        description: |
          The type of the benefit item
      href:
        type: string
        description: |
          The self-reference to the benefit item
      promotionCriteriaGroupId:
        type: string
        description: |
          The ID of the promotion criteria group (root or nested) as part of which the item is qualified as a benefit item
      pathToRoot:
        type: string
        description: |
          The path from the current item in the oroduct offering structure to the root. This property is populated if the benefit item is a nested item.
      itemState:
        type: string
        description: |
          The apply state of the benefit on a benefit item. The state can have the following values:

          - 'applied' - For a benefit that is applied
          - 'notApplied' - For a benefit that is not applied
          - 'pendingApply' - Received in the request for a benefit, for which the relevant benefit item is selected externally by a consuming application and should be applied
      action:
        type: array
        items:
          $ref: '#/definitions/PromotionAction'
        x-dox-DesignNote: |
          A reference to the Benefit definition.
    description: |
      The reference to the benefit item object
    x-dox-Since: v10.2
  PromotionAction:
    required:
      - actionType
    properties:
      id:
        type: string
        description: |
          The unique ID of the action
      name:
        type: string
        description: |
          The localized name of the promotion
      description:
        type: string
        description: |
          The localized description of the promotion
      actionType:
        type: string
        description: |
          The type of the benefit. The possible value is - Price Alteration, Product Offering.
      actionValue:
        type: integer
        description: |
          The value of the action. If the type is Price Alteration, the value is populated with '1'.
      actionObjectId:
        type: string
        description: |
          The ID of the action object
      duration:
        description: "Duration of the promotion action. \n`deprecated`\n"
        $ref: '#/definitions/Quantity'
      durationPolicy:
        $ref: '#/definitions/DurationPolicy'
      validFor:
        $ref: '#/definitions/TimePeriod'
      actionObject:
        type: array
        description: |
          For the Price Alteration type, the object on which the action is being performed, that is, the promotion discount. This object represents a promotion criteria group.
        items:
          $ref: '#/definitions/PromotionCriteriaGroup'
      actionObjectRef:
        type: array
        description: |
          The reference to the object of the action. For the Price Alteration type, this object is the promotion discount - represents a reference to an existing promotion criteria group in the current promotion rule. If there is a reference only, the ID of the promotion criteria group is populated.
        items:
          $ref: '#/definitions/PromotionCriteriaGroupRef'
      promotionPriceAlteration:
        $ref: '#/definitions/ProductOfferingPriceRef'
      productOfferingBenefit:
        type: array
        description: |
          Reference to a product offering usaed as a free offer benefit by the promotion
        items:
          $ref: '#/definitions/ProductOfferingBenefit'
      restriction:
        description: The restriction of the PromotionAction
        $ref: '#/definitions/ActionRestriction'
      externalIdentifier:
        type: array
        description: |
          List of Identifiers in external system(s)
        items:
          $ref: '#/definitions/ExternalIdentifier'
      relatedTriggerItem:
        type: array
        description: "An optional relation from a specific qualified promotion action to a specific trigger item. For promotion action with actionType = productOffering and actionObjectRef pointing to one of the criteria groups, this relation indicates a relevant trigger item to which the action should be subscription related. \n"
        items:
          $ref: '#/definitions/RelatedTriggerItem'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: PromotionActionExtensions
        x-dox-NotImplemented: true
    description: "The action of the promotion. When customers meet the conditions in the promotion pattern, they can be given the benefits that are included in the action.\n`Note - duration field is deprecated. Use duarationPolicy instead` \n"
  RelatedTriggerItem:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the related trigger item
      role:
        type: string
        description: |
          The role of the related trigger item
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: RelatedTriggerItemExtensions
        x-dox-NotImplemented: true
  DurationPolicy:
    type: object
    properties:
      duration:
        $ref: '#/definitions/Quantity'
      startDatePolicy:
        type: string
        description: |
          Start date of the policy, from which the duration is calculated
      endDatePolicy:
        type: string
        description: |
          End date of the policy, until which the duration is calculated
      effectiveFor:
        $ref: '#/definitions/TimePeriod'
      terminationPolicy:
        type: string
        description: |
          Defines the termination policy upon duration end date
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: DurationPolicyExtensions
        x-dox-NotImplemented: true
    description: |
      Policy for calculting a limited duration for any entity
  PromotionCriteriaGroup:
    properties:
      id:
        type: string
        description: |
          The ID of the criteria group
      groupName:
        type: string
        description: |
          The name of the criteria group
      criteriaType:
        type: string
        description: |
          The type of the criteria. Usually, represents a context entity such as Customer, Product Offering, Product, and so on.
      criteriaTypeMethod:
        type: string
        description: |
          The criteria type method used to describe the criteria group type. The supported criteria group types are - Scope, Criteria, List, Aggregation, and so on.
      relationTypeInGroup:
        type: string
        description: |
          The logical relation type amongst the various criteria inside the promotion criteria group. The AND and the OR logical relations are supported.
      equalVariable:
        type: string
        description: |
          Relevant for criteria groups with criteriaTypeMethod = Scope. Represents a common parameter that must be qualified on all criteria groups defined uder the scope.
      aggregationFunctionCriteria:
        description: |
          The criteria for the number of times the group (including nested groups) is evaluated as true/successful for the group to be evaluated as true. For example, for a mobile bundle, the group criterion is groupQuantityCriteria >= 2, meaning that the item list to be evaluated must contain two mobile bundles in order for the group to be evaluated as true.
        $ref: '#/definitions/PromotionCriteria'
      criteria:
        type: array
        items:
          $ref: '#/definitions/PromotionCriteria'
      criteriaGroup:
        type: array
        items:
          $ref: '#/definitions/PromotionCriteriaGroup'
      scopeCriteria:
        $ref: '#/definitions/PromotionCriteriaGroup'
      countRestriction:
        description: |
          The benefit limit and bogo count restrictions
        $ref: '#/definitions/CountRestriction'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: PromotionCriteriaGroupExtensions
        x-dox-NotImplemented: true
  PromotionCriteria:
    properties:
      id:
        type: string
        description: |
          The ID of the criteria
      criteriaParam:
        type: string
      criteriaParamName:
        type: string
      criteriaOperator:
        type: string
      criteriaValue:
        type: string
      criteriaUOM:
        type: string
      criteriaCharacteristic:
        type: array
        items:
          $ref: '#/definitions/Context'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PromotionCriteriaExtensions
        x-dox-NotImplemented: true
  Context:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the context of the rule
      type:
        type: string
        description: |
          The type of the context of the rule
      value:
        type: array
        description: |
          The value of the context of the rule
        items:
          type: string
    description: |
      The reference to the context definition of the rule
  CountRestriction:
    type: object
    properties:
      benefitLimit:
        type: integer
        description: |
          The benefit limit of the count restriction. Specifies how many of the counted items can be included within a promotion instance as benefits
      payForCount:
        type: integer
        description: |
          The payed item limit of the count restriction. Specifies how many of the counted items within a promotion instance how many should be payed for
    description: |
      The benefit limit and BOGO restrictions related to the count.  In case of benefit limit restriction, specifies how many of the counted items can be included within a promotion instance. In case of BOGO restriction, specifies how many of the counted items are benefited and how many should be payed for.
  PromotionCriteriaGroupRef:
    properties:
      id:
        type: string
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PromotionCriteriaGroupRefExtensions
        x-dox-NotImplemented: true
  ProductOfferingPriceRef:
    properties:
      id:
        type: string
      priceType:
        type: string
        description: ProductOfferingPrice price type (OC/RC)
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductOfferingPriceRefExtensions
        x-dox-NotImplemented: true
    description: |
      The action discount reference, representing the relevant pricing entity that defines the actual discount
  ProductOfferingBenefit:
    type: object
    properties:
      productOfferingId:
        type: string
        description: |
          the id of the product offering granted as a benefit
      promotionPriceAlteration:
        type: array
        description: |
          referecne to price entity representing the actual monetary discount
        items:
          $ref: '#/definitions/ProductOfferingPriceRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductOfferingBenefitExtensions
        x-dox-NotImplemented: true
    description: Reference to a product offering used as a free offer benefit by the promotion
  ActionRestriction:
    type: object
    properties:
      upperLimit:
        type: integer
        description: |
          The upper limit of the porotion action restriction
    description: |
      The promotion action restriction. Defines how many benefitted items can be included within one promotion instance
  ExternalIdentifier:
    type: object
    properties:
      type:
        type: string
        description: |
          The type of the external system
      id:
        type: string
        description: |
          The unique identifier in the external system
      version:
        type: string
        description: |
          The version of the related entity in the external system
      extension:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ExternalIdentifierExtension
    description: |
      The reference to an external system identifier
  StockItem:
    type: object
    properties:
      stockAvailabilityStatus:
        type: string
        description: |
          The stock availability levels for the product - in stock, out of stock, and low stock
      stockAvailabilityQuantity:
        type: integer
        description: |
          The actual number of items in stock for the product
    description: |
      The representation of the stock information for the product in the stock management system
  PricingImpactEntityRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the pricing impct entity
      href:
        type: string
        description: |
          The href of the pricing impct entity
      '@referredType':
        type: string
        description: |
          Indicate the class (type) of entity. Valid Values - catalogItem, cartItem, orderItem, product
      pathToRoot:
        type: string
        description: |
          The path from the current item to the root, populated for products which are nested products
      priceImpactType:
        type: string
        description: |
          The impact type.  Valid Values - impactOn, impactedBy
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: PricingImpactEntityRefExtensions
        x-dox-NotImplemented: true
    description: |
      The items impacted by the quoted product offering
  Error:
    type: object
    required:
      - code
      - reason
    discriminator: '@type'
    properties:
      code:
        type: string
        description: |
          Error code relevant to an application, defined in the API or in a common list
      reason:
        type: string
        description: |
          Explanation of the reason for the error that can be displayed to a user
      message:
        type: string
        description: |
          Additional information about the error  and corrective actions related to the error that can be displayed to a user
      status:
        type: string
        description: |
          HTTP error code extension
      referenceError:
        type: string
        format: uri
        description: |
          URI of the documentation describing the error
      traceId:
        type: string
        description: |
          Unique tracker ID that is used to facilitate the troubleshooting
      '@type':
        type: string
        description: |
          Type of the error
      characteristic:
        type: array
        description: |
          Charachteristic parameters that are associated with the error
        items:
          $ref: '#/definitions/ErrorCharacteristic'
    description: |
      Error response. This object is used when an API throws an error, typically with a HTTP error response codes 3xx, 4xx, and 5xx
  ErrorCharacteristic:
    type: object
    properties:
      name:
        type: string
        description: |
          Non-localized name identifier of the characteristic
      value:
        type: string
        description: |
          Value of the characteristic
    description: |
      Parameter that is associated with the error entity
  ValidationError:
    allOf:
      - $ref: '#/definitions/Error'
      - properties:
          validationMessage:
            type: array
            description: |
              The validation messages
            items:
              $ref: '#/definitions/ValidationMessage'
    description: |
      Validation error object that is used when an API throws an error, typically with a HTTP error response code 422
  ValidationMessage:
    type: object
    properties:
      id:
        type: string
        description: |
          Non-localized name identifier of the validation message
      text:
        type: string
        description: |
          Localized descriptive validation message
      type:
        type: string
        description: |
          Type of the validation message
      subtype:
        type: string
        description: |
          Distinct code which represents the issue
      parameter:
        type: array
        description: |
          Name/value pair of the validation message
        items:
          $ref: '#/definitions/ValidationMessageParameter'
      severity:
        type: string
        description: |
          Severity of the validation message
      path:
        type: string
        description: |
          Path to the resource part to which the validation message is related
      resource:
        type: array
        description: |
          Resource that is associated with the message
        items:
          $ref: '#/definitions/RelatedResource'
    description: |
      Message associated with the validation failure
  ValidationMessageParameter:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the parameter
      value:
        type: array
        description: |
          Value of the parameter
        items:
          type: string
    description: |
      Name/value pair of the validation message parameter
  RelatedResource:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the resource
      id:
        type: string
        description: |
          Unique identifier of the resource
      variable:
        type: array
        description: |
          Variables related to the resource
        items:
          $ref: '#/definitions/Variable'
      containedResource:
        type: array
        description: |
          Other resources, specs, or offers that are linked to the message but did not trigger the validation message
        items:
          $ref: '#/definitions/ContainedResource'
    description: |
      Resource that is associated with the validation message (that is, triggered the validation failure)
  Variable:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the variable
      id:
        type: string
        description: |
          Unique identifier of the variable
      value:
        type: array
        description: |
          Value(s) of the variable
        items:
          type: string
    description: |
      Variable that is associated with a resource
  ContainedResource:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the resource
      id:
        type: string
        description: |
          Unique identifier of the resource
      variable:
        type: array
        description: |
          Variables that are related to the resource
        items:
          $ref: '#/definitions/Variable'
    description: |
      Resources that are contained in the validation message
  ProductOfferingRelationship:
    description: Product Offering Relationship
    type: object
    properties:
      id:
        description: The relevant Business Relationship unique identifier
        type: string
      name:
        description: Business Relationship name
        type: string
      localizedName:
        description: Business Relationship localized name
        $ref: '#/definitions/LocalizedStringArray'
      description:
        description: Business Relationship localized description
        $ref: '#/definitions/LocalizedStringArray'
      relationType:
        description: |
          Business Relationship type (valid constant value is: commercialRelation)
        type: string
      relationRole:
        description: |
          Business Relationship role (valid constant value is: ADDON)
        type: string
      managed:
        description: Business Relationship managed flag
        type: boolean
      expiredForSales:
        description: Business Relationship expiredForSales flag
        type: boolean
      sourceProductOffering:
        description: Business Relationship source Product Offering
        $ref: '#/definitions/EntityRef'
      sourceProductOfferingGroup:
        description: Business Relationship source Product Offering Group
        $ref: '#/definitions/NamedEntityRef'
      targetProductOffering:
        description: Business Relationship target Product Offerings
        type: array
        items:
          $ref: '#/definitions/TargetProductOfferingRef'
      targetProductOfferingGroup:
        description: Business Relationship target Product Offering Groups
        type: array
        items:
          $ref: '#/definitions/TargetProductOfferingGroupRef'
      relationParameter:
        description: Business Relationship parameters
        type: array
        items:
          $ref: '#/definitions/RelationParameter'
  LocalizedStringArray:
    type: "array"
    items:
      $ref: "#/definitions/LocalizedString"
  LocalizedString:
    properties:
      locale:
        type: "string"
      value:
        type: "string"
        items:
          type: string
  NamedEntityRef:
    allOf:
      - $ref: "#/definitions/EntityRef"
      - type: "object"
        properties:
          name:
            type: "string"
  EntityRef:
    properties:
      id:
        type: "string"
        description: "The entity identifier.\n"
    description: "The target population that the entity applies to."
  TargetProductOfferingRef:
    description: Product Offering Reference as a target of the Buisiness Relationship
    allOf:
      - $ref: '#/definitions/EntityRef'
      - type: object
        properties:
          expiredForSales:
            type: boolean
  TargetProductOfferingGroupRef:
    description: Product Offering Reference as a target of the Buisiness Relationship
    allOf:
      - $ref: '#/definitions/EntityRef'
      - type: object
        properties:
          name:
            type: string
          expiredForSales:
            type: boolean
  ProductOfferingRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the product offering
      href:
        type: string
      valueRank:
        type: integer
        description: |
          The value rank of the product offering
      productOfferingType:
        type: string
        description: |
          The type of the product offering
      localizedName:
        type: string
        description: |
          The localized name of the product offering
      localizedDescription:
        type: string
        description: |
          The localized description of the product offering
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductOfferingRefExtensions
        x-dox-NotImplemented: true
    description: |
      The reference to the product offering
  ProductOfferingGroupRef:
    type: object
    properties:
      id:
        type: string
        description: |
          identifier of the product group
      href:
        type: string
        description: Reference to the group
      name:
        type: string
        description: |
          Text identifier of the group
    description: |
      relation Group
  RelationParameter:
    type: object
    description: Relationship additional parameters
    properties:
      id:
        description: The relevant Business Relationship Parameter unique identifier.
        type: string
      operator:
        type: string
        description: "The 'relationship parameter'operator \n"
      sourceParameter:
        $ref: "#/definitions/RParameter"
      targetParameter:
        $ref: "#/definitions/RParameter"
  RParameter:
    type: object
    properties:
      name:
        type: string
      source:
        type: string
      type:
        type: string
        description: "Relationship Parameter type \n"
      productSpecificationType:
        $ref: "#/definitions/EntityRef"
      productOfferingType:
        $ref: '#/definitions/EntityRef'
  SearchProductOfferingRelatedCategory:
    type: object
    required:
      - categoryTotal
      - id
    properties:
      id:
        type: string
        description: |
          The unique ID of the product offering leaf category
      href:
        type: string
        description: |
          The self-reference to the category
      name:
        type: string
        description: |
          The unique name of the category
      localizedName:
        type: string
        description: |
          The localized name of the category
      categoryTotal:
        type: string
        description: |
          The total number of product offers related to the category
      categoryPath:
        type: array
        description: |
          The list of categories from the leaf category to the root category
        items:
          $ref: '#/definitions/CategoryPath'
      filterCharacteristic:
        type: array
        description: |
          List filter Characteristic
        items:
          $ref: '#/definitions/FilterCharacteristic'
    description: |
      The product offering category related to the discovery flows
  CategoryPath:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the category
      localizedName:
        type: string
        description: |
          The localized name of the category
      code:
        type: string
        description: "The unique name     \n"
    description: |
      The category path from the leaf category to the root category
  FilterCharacteristic:
    type: object
    properties:
      name:
        type: string
        description: |
          Unique name of the filter characteristic
      localizedName:
        type: string
        description: |
          Localized name of the filter characteristic
      valueType:
        type: string
      productSpecification:
        type: string
        description: A reference to the product specification catalog entity that the product offering characteristic is defined under The product specification reference exists only for characteristics that are related to the product offering via a product specification.
      filterCharacteristicValue:
        type: array
        description: |
          List filter Characteristic
        items:
          $ref: '#/definitions/FilterCharacteristicValue'
  FilterCharacteristicValue:
    type: object
    properties:
      default:
        type: boolean
        description: |
          If the item acts as a default
      value:
        type: string
        description: Actual value
      localizedValue:
        type: string
        description: localized value
      unitOfMeasure:
        type: string
      valueFrom:
        type: string
        description: Applicable only in case of range filter. Represents the lower limit of this value
      valueTo:
        type: string
        description: Applicable only in case of range filter. Represents the upper limit of this value
  FullDistributionRequest:
    properties:
      id:
        type: string
    description: |
      defines the full distribution request in catalog idenitified by a unique identifier.
    x-dox-Since: v10.2
  CompareProductOffering:
    type: object
    properties:
      href:
        type: string
        description: |
          The self-reference to the item
        default: "true"
      productOfferingType:
        type: string
        description: |
          The type of the product offering
      productOffering:
        type: array
        description: |
          The reference to the product offering
        items:
          $ref: '#/definitions/ProductOfferingRef'
      compareProductOfferingCharacteristic:
        type: array
        description: |
          The array of the attribute names
        items:
          $ref: '#/definitions/CompareProductOfferingCharacteristic'
      comparePrices:
        type: array
        items:
          $ref: '#/definitions/ComparePrice'
      productOfferingDetails:
        type: array
        items:
          $ref: '#/definitions/ProductOffering'
    description: |
      The product offering of the Discovery flows
  CompareProductOfferingCharacteristic:
    type: object
    properties:
      name:
        type: string
        description: |
          The text ID of the product offering characteristic
      localizedName:
        type: string
        description: |
          The localized product offering characteristic name
      valueType:
        type: string
        description: |
          The value type of the characteristic
      comparableValue:
        type: array
        description: |
          The value of the characteristic
        items:
          $ref: '#/definitions/CompareCharacteristicsValue'
      characteristicsMetadata:
        type: array
        items:
          $ref: '#/definitions/Metadata'
    description: |
      The list of the descriptive characteristics for the Discovery flows.
      The list is derived from the product offering and included in the product specification (if one exists).
    example:
      localizedName: localizedName
      valueType: valueType
      name: name
      comparableValue:
        - productOfferingId: productOfferingId
          valueTo: valueTo
          localizedValues:
            - localizedValues
            - localizedValues
          unitOfMeasure: unitOfMeasure
          values:
            - values
            - values
          containInProductOfferingId: containInProductOfferingId
          valueFrom: valueFrom
        - productOfferingId: productOfferingId
          valueTo: valueTo
          localizedValues:
            - localizedValues
            - localizedValues
          unitOfMeasure: unitOfMeasure
          values:
            - values
            - values
          containInProductOfferingId: containInProductOfferingId
          valueFrom: valueFrom
  CompareCharacteristicsValue:
    type: object
    properties:
      productOfferingId:
        type: string
        description: |
          The ID of the product offer that contains the characteristic
      containInProductOfferingId:
        type: string
        description: |
          The ID of the product offer that is defined as the business product according to the offer type
      values:
        type: array
        description: |
          The value of the characteristic
        items:
          type: string
      localizedValues:
        type: array
        description: |
          The localized value of the characteristic
        items:
          type: string
      valueFrom:
        type: string
        description: |
          The lower limit of the value, applicable only in cases of a filter range
      valueTo:
        type: string
        description: |
          The upper limit of the value, applicable only in cases of a filter range
      unitOfMeasure:
        type: string
        description: |
          The unit of measurement of the product offering characteristic value
    description: |
      The available values of the descriptive characteristic
    example:
      productOfferingId: productOfferingId
      valueTo: valueTo
      localizedValues:
        - localizedValues
        - localizedValues
      unitOfMeasure: unitOfMeasure
      values:
        - values
        - values
      containInProductOfferingId: containInProductOfferingId
      valueFrom: valueFrom
  ComparePrice:
    type: object
    properties:
      poid:
        type: string
      containInProductOfferingId:
        type: string
        description: |
          The ID of the product offering defined as the business product according to the offering type
      price:
        type: array
        items:
          $ref: '#/definitions/DiscoveryPrice'
  ProductOfferingPriceOption:
    type: object
    properties:
      id:
        type: string
        description: |
          The product offering ID
        readOnly: true
      type:
        type: string
        description: |
          The type of the product offer
      itemId:
        type: string
        description: The item id
      conditionPriceCharacteristic:
        $ref: '#/definitions/ProductOfferingCharacteristic'
      staticPriceCharacteristics:
        type: array
        items:
          $ref: '#/definitions/ProductOfferingCharacteristic'
      productOfferingTerm:
        $ref: '#/definitions/ProductOfferingTerm'
      productOfferingPrice:
        $ref: '#/definitions/DiscoveryPrice'
      immediatePromotion:
        type: array
        items:
          $ref: '#/definitions/ImmediatePromotion'
        x-dox-DesignNote: |
          Immediate Promotion with details
      relatedImmediatePromotion:
        type: array
        items:
          $ref: '#/definitions/RelatedImmediatePromotion'
        x-dox-DesignNote: |
          A reference to the relatedImmediatePromotion entity.
    description: "The price options impact for the product offer, with The characteristic of the product offer that we need to analyze for the price \n"
  PriceTerm:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      duration:
        $ref: '#/definitions/Quantity'
      remainingDuration:
        $ref: '#/definitions/Quantity'
      elapsedDuration:
        $ref: '#/definitions/Quantity'
      validFor:
        $ref: '#/definitions/TimePeriod'
      freezeDate:
        type: string
        format: date-time
        description: |
          Date on which a commitment term was frozen due to an action performed on the product
        x-dox-NotImplemented: true
      impactType:
        type: string
        description: "Type of the impact on the term of the item due to an action performed on the product  \n"
        x-dox-NotImplemented: true
      policyId:
        type: string
        description: |
          Unique identifier of the term policy
        x-dox-NotImplemented: true
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PriceTermExtensions
        x-dox-NotImplemented: true
    description: |
      The product offering terms that could impact the price
  ProductOfferingQuantityPriceOption:
    type: object
    properties:
      rootId:
        type: string
        description: |
          The product offering ID
        readOnly: true
      itemId:
        type: string
        description: The item id represents the quantified offer
      itemCatalogId:
        type: string
        description: The item catalogId  in quantified offer
      name:
        type: string
        description: The item name  in quantified offer
      itemIdQuantity:
        type: integer
        description: The quantity of the item
      productOfferingPrice:
        type: array
        items:
          $ref: '#/definitions/DiscoveryPrice'
      productOfferingTotalPrice:
        type: array
        items:
          $ref: '#/definitions/DiscoveryPrice'
      immediatePromotion:
        type: array
        items:
          $ref: '#/definitions/ImmediatePromotion'
        x-dox-DesignNote: |
          Immediate Promotion with details
      relatedImmediatePromotion:
        type: array
        items:
          $ref: '#/definitions/RelatedImmediatePromotion'
        x-dox-DesignNote: |
          A reference to the relatedImmediatePromotion entity.
      ProductOfferingQuantityPriceOption:
        type: array
        description: The quantity price option of the requested child items
        items:
          $ref: '#/definitions/ProductOfferingQuantityPriceOption'
    description: "The price options impact for the product offer, with The characteristic of the product offer that we need to analyze for the price \n"
  Category:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of this 'category'
      href:
        type: string
        description: Reference to the Category
      name:
        type: string
        description: |
          Text identifier of the category (category code)
      localizedName:
        type: string
        description: |
          Localized category name
      code:
        type: string
        description: "The unique name \n"
      description:
        type: string
        description: |
          The description of the category
      isRoot:
        type: boolean
        description: |
          Indication for Root category
      rootId:
        type: string
        description: |
          Indication for Root category
      isLeaf:
        type: boolean
        description: |
          Indication for Leaf category
      category:
        type: array
        description: |
          List of child categories
        items:
          $ref: '#/definitions/Category'
      filterCharacteristic:
        type: array
        description: |
          List filter Characteristic
        items:
          $ref: '#/definitions/FilterCharacteristic'
    description: |
      A resource of category
  CategoryPathToRoot:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the leaf category
      localizedName:
        type: string
        description: |
          Localized leaf category name
      code:
        type: string
        description: "The unique name            \n"
      filterCharacteristics:
        type: array
        description: List of filter caharcteristics
        items:
          $ref: '#/definitions/FilterCharacteristic'
      categoryPath:
        type: array
        description: "List of category paths up to the root category  \n"
        items:
          $ref: '#/definitions/CategoryPath'
      salesChannels:
        description: |
          Sales Channels that are related to the Category
        type: array
        items:
          type: string
    description: |
      List of path to root category
    example:
      localizedName: localizedName
      categoryPath:
        - localizedName: localizedName
          id: id
        - localizedName: localizedName
          id: id
      id: id
  PricingProductOfferingInput:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the price for the product offering
      type:
        type: string
        description: "The type of the product offering\n`deprecated. Use productOffering.type instead` \n"
      action:
        type: array
        description: |
          The action to be performed on the pricing product offering. For newly purchased pricing product offerings, the action is Add.
          For existing pricing product offerings, the actions can be Remove, Suspend, Resume, or Change. If there is no change, the action is No Change.
        items:
          $ref: '#/definitions/Action'
      quantity:
        type: integer
        description: |
          The quantity of the current product offering
      configured:
        type: boolean
        description: "True - This offer has been selected and configured. False - this offer is only an configuration option \n"
      applyFinalPrice:
        type: boolean
        description: "Relevant only if the operation calculation method is 'applyFinalPrice'. \nTrue - The final price will be calculated.\nElse - The calculation is skipped. \n"
      characteristic:
        type: array
        description: |
          The pricing product offering characteristic
        items:
          $ref: '#/definitions/PriceCharacteristic'
      priceTerm:
        type: array
        description: |
          The product offering term that could impact the price
        items:
          $ref: '#/definitions/PriceTerm'
      productOfferingPrice:
        type: array
        description: "The prices of the product offering      \n"
        items:
          $ref: '#/definitions/ProductOfferingPrice'
      pricingProductOffering:
        type: array
        items:
          $ref: '#/definitions/PricingProductOfferingInput'
      productOffering:
        $ref: '#/definitions/ProductOfferingRef'
      priceParameter:
        type: array
        description: |
          parameters that may impact the price
        items:
          $ref: '#/definitions/PriceParam'
      promotionAction:
        type: array
        description: |
          The promotions benefits
        items:
          $ref: '#/definitions/PromotionAction'
      calculationType:
        type: string
        description: "The context in which the calculate price was invoked. Valid valies - catalog, cart, order, configuration \n"
      creationDate:
        type: string
        format: date-time
        description: "The item creation date  \n"
      requestedCompletionDate:
        type: string
        format: date-time
        description: |
          Date on which the product order was requested to be completed (relevant for future orders)
        x-dox-NotImplemented: true
      shoppingCart:
        description: |
          A reference to the shopping cart (in case the shopping cart is in the context of the consummer) [mutually exclusive with ProductOrderRef]
        $ref: '#/definitions/ShoppingCartRef'
      productOrder:
        description: |
          A reference to the product order (in case the product order is in the context of the consummer) [mutually exclusive with ShoppingCartRef]
        $ref: '#/definitions/ProductOrderRef'
      product:
        description: |
          A reference to the product
        $ref: '#/definitions/PricingProduct'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PricingProductOfferingInputExtensions
    description: "The input of the Price microservice. Represents an offer entity (tree structure) for which the price calculation is required. \n"
  Action:
    type: object
    properties:
      action:
        type: string
      modifyReason:
        $ref: '#/definitions/Reason'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ActionExtensions
        x-dox-NotImplemented: true
    description: |
      The action ID (resume, suspend, or change) and its reason
  Reason:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      reasonText:
        type: string
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ReasonExtensions
        x-dox-NotImplemented: true
    description: "The reason for the action \n"
  PriceCharacteristic:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      valueType:
        type: string
        description: |
          Value type of the product characteristic
      productSpecification:
        $ref: '#/definitions/ProductSpecificationRef'
    description: |
      The key-value pair for the price characteristics
  ProductOfferingPrice:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the product offering price
      name:
        type: string
        description: |
          The name of the product offering price
      description:
        type: string
        description: |
          The description of the product offering price
      priceType:
        type: string
        description: |
          The type of the price: recurring, one-time, or usage
      recurringChargePeriodType:
        type: string
        description: |
          The type of period of the recurring charge, such as month, week, and so on
      unitOfMeasure:
        type: string
        description: |
          The unit of measurement of the product offering available at the offered
          price, such as minutes, GB, and so on
      recurringChargePeriodLength:
        type: integer
        description: |
          The length of the recurring charge period
      priceAlteration:
        type: array
        description: |
          Alteration that impact the price
        items:
          $ref: '#/definitions/PriceAlteration'
      price:
        $ref: '#/definitions/Price'
      finalPrice:
        $ref: '#/definitions/Price'
      immediatePayOption:
        $ref: '#/definitions/ImmediatePayOption'
      installmentOption:
        $ref: '#/definitions/InstallmentOption'
      taxIncluded:
        type: string
        description: Indicates if the price is defined in the catalog one as tax included or as tax excluded. Valid Values - Excluded, Included
      standalonePrice:
        $ref: '#/definitions/Price'
      productOfferingPriceRelationship:
        $ref: '#/definitions/ProductOfferingPriceRelationship'
      priceOverrideOption:
        $ref: '#/definitions/PriceOverrideOption'
      role:
        type: string
        description: |
          The role of the price
      owner:
        type: string
        description: |
          The owner of the price
      optionalInstallmentOption:
        type: array
        description: |
          available installment option for the price
        items:
          $ref: '#/definitions/OptionalInstallmentOption'
      priceEvent:
        type: array
        description: |
          Price events qualified during the pricing
        items:
          $ref: '#/definitions/PriceEventRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductOfferingPriceExtensions
        x-dox-NotImplemented: true
    description: |
      The price of the product offering
  PriceOverrideOption:
    type: object
    properties:
      overrideType:
        type: string
        description: |
          Indicates which override option the CSR can apply. Valid Values : waive, absolute, increase, decrease
      overrideValue:
        description: "The override amount or percent.  \n"
        $ref: '#/definitions/PaymentAmount'
      validFor:
        description: |
          Time validity of the price override
        $ref: '#/definitions/TimePeriod'
      relatedParty:
        description: |
          Party (user) associated with the product order price override
        $ref: '#/definitions/RelatedPartyRef'
      reason:
        description: |
          The Reason of the product order price override
        $ref: '#/definitions/Reason'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PriceOverrideOptionExtensions
        x-dox-NotImplemented: true
    description: |
      The waive and override data of a price
  RelatedPartyRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the related party
      href:
        type: string
        description: |
          Hypertext reference to the related party, could be a party reference or a party role reference
      name:
        type: string
        description: |
          Name of the related party
      role:
        type: string
        description: |
          Role played by the related party
      '@referredType':
        type: string
        description: |
          Name of the type of the referred resource entity
      lastName:
        type: string
        description: |
          Last name of the related party
      firstName:
        type: string
        description: |
          First name of the related party
      phoneNumber:
        type: string
        description: |
          Phone number of the related party
      emailAddress:
        type: string
        description: |
          emailAddress of the related party
      segment:
        type: string
        description: |
          segment of the related party
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: RelatedPartyRefExtensions
        x-dox-NotImplemented: true
    description: |
      Party or party role that is linked to a specific entity
  OptionalInstallmentOption:
    properties:
      id:
        type: string
        description: |
          The identifier of the installment option
      installmentOption:
        type: string
        description: |
          Indicates if the installment option is optional / mandatory
      numberOfInstallments:
        type: integer
        description: |
          The number of installments
      minNumberOfInstallments:
        type: integer
        description: |
          The minimal number of installments
      maxNumberOfInstallments:
        type: integer
        description: |
          The maximal number of installments
      defaultNumberOfInstallments:
        type: integer
        description: |
          The number of installments
      downPayment:
        $ref: '#/definitions/PaymentAmount'
      minDownPayment:
        $ref: '#/definitions/PaymentAmount'
      maxDownPayment:
        $ref: '#/definitions/PaymentAmount'
      defaultDownPayment:
        $ref: '#/definitions/PaymentAmount'
      installmentOptionPrice:
        type: array
        items:
          $ref: '#/definitions/InstallmentOptionPrice'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: OptionalInstallmentOptionExtensions
        x-dox-NotImplemented: true
    description: |
      Represents an installment option
  InstallmentOptionPrice:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the product offering price
      name:
        type: string
        description: |
          The name of the product offering price
      description:
        type: string
        description: |
          The description of the product offering price
      priceType:
        type: string
        description: |
          The type of the price: recurring, one-time, or usage
      recurringChargePeriodType:
        type: string
        description: |
          The type of period of the recurring charge, such as month, week, and so on
      unitOfMeasure:
        type: string
        description: |
          The unit of measurement of the product offering available at the offered
          price, such as minutes, GB, and so on
      recurringChargePeriodLength:
        type: integer
        description: |
          The length of the recurring charge period
      taxIncluded:
        type: string
        description: Indicates if the price is defined in the catalog one as tax included or as tax excluded. Valid Values - Excluded, Included
      role:
        type: string
        description: |
          The role of the price
      owner:
        type: string
        description: |
          The owner of the price
      price:
        $ref: '#/definitions/Price'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: InstallmentOptionPriceExtensions
        x-dox-NotImplemented: true
    description: |
      The price relevant for the installment option: OC-Installment, RC-Installment, External Override charge
  PriceEventRef:
    type: object
    properties:
      id:
        type: string
      href:
        type: string
      name:
        type: string
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PriceEventRefExtensions
        x-dox-NotImplemented: true
    description: |
      The price event reference which was qualified
  ShoppingCartRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the shopping cart
      itemId:
        description: |
          The identifier of the shopping cart item
        type: string
      href:
        type: string
        format: url
        description: |
          The self-reference to the item
        readOnly: true
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ShoppingCartRefExtensions
        x-dox-NotImplemented: true
    description: |
      The reference to the shopping cart. Mutually exclusive with ProductOrderRef
    x-dox-DesignNote: |
      mutually exclusive with ProductOrderRef
  ProductOrderRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the product order
      itemId:
        description: |
          The identifier of the order item
        type: string
      href:
        type: string
        format: url
        description: |
          The self-reference to the item
        readOnly: true
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductOrderRefExtensions
        x-dox-NotImplemented: true
    description: |
      The reference to the product order. Mutually exclusive with ShoppingCartRef
    x-dox-DesignNote: |
      mutually exclusive with ShoppingCartRef
  PricingProduct:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the product
      href:
        type: string
        description: |
          The self reference to the product
      referenceId:
        type: string
        description: |
          A unique ID of the product in the cart/order hierarchy, in case there is no id
      status:
        type: string
        description: |
          The state of the product in the Product Inventory domain
      primaryProductId:
        type: string
        description: "The ID of the primary product. \n"
      activationDate:
        type: string
        format: date-time
        description: "The date on which the product was activated. \n"
      pricingProductRelationship:
        type: array
        items:
          $ref: '#/definitions/PricingProductRelationship'
      productSpecification:
        $ref: '#/definitions/ProductSpecificationRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: PricingProductExtensions
        x-dox-NotImplemented: true
    description: "Represents an owned product or a product to be provided \n"
  PricingProductRelationship:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the product relationship. It can be :
          - <i>bundled</i> if the product is a bundle and you want to describe the "bundled" products inside this bundle
          - <i>enabledBy</i> if the product needs another already owned product to rely on (e.g. an option on an already owned mobile access product)
          - <i>commercialRelation</i> if defined the managed relationship between this product and another product
          - <i>priceContribution</i> if one of the product prices is impacted by other product
          - <i>subscriptionRelation</i> if the product is related to another product identified as subscriberMainOffer
      subtype:
        type: string
        description: "Specific relation entity subtype. Relevant for several relation types \n"
      pricingProduct:
        $ref: '#/definitions/PricingProduct'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PricingProductRelationshipExtensions
        x-dox-NotImplemented: true
    description: |
      The product relationship
  PricingProductOfferingOutput:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the price product offering
      quantity:
        type: integer
        description: |
          The quantity of the current product offerings
      configured:
        type: boolean
        description: "True - This offer has been selected and configured. False - this offer is only an configuration option \n"
      action:
        type: array
        description: |
          The action to be performed on the pricing product offering. For newly purchased pricing product offerings, the action is Add.
          For existing pricing product offerings, the actions can be Remove, Suspend, Resume, or Change. If there is no change, the action is No Change.
        items:
          $ref: '#/definitions/Action'
      skipTotals:
        type: boolean
        description: |
          Indicates whether one price or more for the current product offering is missing (flag set to true)
      totalPrice:
        type: array
        description: |
          The total of each type of price. If the price is missing this field, it is set to null.
        items:
          $ref: '#/definitions/PricingProductOfferingPrice'
      price:
        type: array
        description: |
          The individual catalog price
        items:
          $ref: '#/definitions/PricingProductOfferingPrice'
      pricingProductOffering:
        type: array
        items:
          $ref: '#/definitions/PricingProductOfferingOutput'
      message:
        type: array
        items:
          $ref: '#/definitions/PricingProductOfferingMessage'
      pricingImpactEntity:
        type: array
        description: "impacted items \n"
        items:
          $ref: '#/definitions/PricingImpactEntityRef'
      calculationType:
        type: string
        description: "The context in which the calculate price was invoked. Valid valies - catalog, cart, order, configuration \n"
      immediatePromotion:
        x-dox-DesignNote: |
          Immediate Promotion with details
        type: array
        items:
          $ref: '#/definitions/ImmediatePromotion'
      relatedImmediatePromotion:
        x-dox-DesignNote: |
          A reference to the relatedImmediatePromotion entity.
        type: array
        items:
          $ref: '#/definitions/RelatedImmediatePromotion'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PricingProductOfferingOutputExtensions
    description: |
      The output of the product offering price
  PricingProductOfferingPrice:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the product offering price
      name:
        type: string
        description: |
          The name of the product offering price
      description:
        type: string
        description: |
          The description of the product offering price
      priceType:
        type: string
        description: |
          The type of the price: recurring, one-time, or usage
      recurringChargePeriodType:
        type: string
        description: |
          The type of period of the recurring charge, such as month, week, and so on
      unitOfMeasure:
        type: string
        description: |
          The unit of measurement of the product offering available at the offered
          price, such as minutes, GB, and so on
      recurringChargePeriodLength:
        type: integer
        description: |
          The length of the recurring charge period
      priceAlteration:
        type: array
        items:
          $ref: '#/definitions/PriceAlteration'
      price:
        $ref: '#/definitions/Price'
      finalPrice:
        $ref: '#/definitions/Price'
      immediatePayOption:
        $ref: '#/definitions/ImmediatePayOption'
      standalonePrice:
        $ref: '#/definitions/Price'
      installmentOption:
        $ref: '#/definitions/InstallmentOption'
      productOfferingPriceRelationship:
        $ref: '#/definitions/ProductOfferingPriceRelationship'
      taxIncluded:
        type: string
        description: Indicates if the price is defined in the catalog one as tax included or as tax excluded. Valid Values - Excluded, Included
      priceOverrideOption:
        $ref: '#/definitions/PriceOverrideOption'
      role:
        type: string
        description: |
          The role of the price
      owner:
        type: string
        description: |
          The owner of the price
      priceEvent:
        type: array
        description: |
          Price events qualified during the pricing
        items:
          $ref: '#/definitions/PriceEventRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PricingProductOfferingPriceExtensions
        x-dox-NotImplemented: true
    description: |
      The price of the product offering
  PricingProductOfferingMessage:
    type: object
    properties:
      type:
        type: string
        description: |
          The PricingProductOfferingMessage implementation description
        readOnly: true
      text:
        type: string
        description: |
          The localized descriptive validation message
        readOnly: true
      path:
        type: string
        description: |
          The path to the nested Pricing Product Offering
        readOnly: true
      severity:
        type: string
        description: |
          The message severity
        readOnly: true
      parameter:
        type: array
        description: |
          The message parameter
        readOnly: true
        items:
          $ref: '#/definitions/PricingProductOfferingMessageParameter'
    description: |
      The message related to a Pricing Product Offering
  PricingProductOfferingMessageParameter:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the parameter
        readOnly: true
      value:
        type: array
        description: |
          The value(s) of the parameter
        readOnly: true
        items:
          type: string
    description: |
      The name/value pair of the message parameter
  discoveryPotentialPromotionQualification:
    type: object
    properties:
      qualificationType:
        type: string
        description: |
          The stage at which the evaluation is requested for the promotion qualification item
          <<enumeration>> QualificationType- catalog, cart, order, product
      potentialQualificationItem:
        type: array
        items:
          $ref: '#/definitions/potentialQualificationItem'
        x-dox-DesignNote: |
          An Item for which the promotion qualification is requested
      relatedParty:
        type: array
        items:
          $ref: '#/definitions/RelatedPartyRef'
        x-dox-DesignNote: |
          A reference to the RelatedPartyRef. Currently expected to get customer Id in the request if exists
      shoppingCart:
        x-dox-DesignNote: |
          A reference to the shopping cart (in case the shopping cart is in the context of the consummer) [mutually exclusive with ProductOrderRef]
        $ref: '#/definitions/ShoppingCartRef'
      productOrder:
        x-dox-DesignNote: |
          A reference to the product order (in case the product order is in the context of the consummer) [mutually exclusive with ShoppingCartRef]
        $ref: '#/definitions/ProductOrderRef'
      context:
        type: array
        description: |
          A reference to the Qualification Context
        items:
          $ref: '#/definitions/Context'
    description: |
      The the promotion qualification serves as an envelope for all the promotion qualification items for which the calling application requests to perform the promotion qualification.
    x-dox-Since: v10.2
  PotentialPromotionQualification:
    type: object
    properties:
      qualificationType:
        type: string
        description: |
          The stage at which the evaluation is requested for the promotion qualification item
          <<enumeration>> QualificationType- catalog, cart, order, product
      potentialQualificationItem:
        type: array
        description: |
          An Item for which the promotion qualification is requested
        items:
          $ref: '#/definitions/potentialQualificationItem'
      relatedParty:
        type: array
        description: |
          A reference to the RelatedPartyRef. Currently expected to get customer Id in the request if exists
        items:
          $ref: '#/definitions/RelatedPartyRef'
      shoppingCart:
        $ref: '#/definitions/ShoppingCartRef'
      productOrder:
        $ref: '#/definitions/ProductOrderRef'
      context:
        type: array
        description: |
          A reference to the Qualification Context
        items:
          $ref: '#/definitions/Context'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: PotentialPromotionQualificationExtensions
    description: |
      The envelope for all promotion qualification items
      for which the calling application requests the promotion qualification to be performed
  potentialQualificationItem:
    type: object
    properties:
      id:
        type: string
        description: |
          The instance ID of the promotion qualification item
      creationDate:
        type: string
        format: date-time
        description: "The item creation date  \n"
      productOffering:
        $ref: '#/definitions/ProductOfferingRef'
      characteristic:
        type: array
        description: |
          A reference to the product offerring characteristics.
        items:
          $ref: '#/definitions/Characteristic'
      action:
        type: array
        description: "The action being performed on the item. \n"
        items:
          $ref: '#/definitions/Action'
      product:
        $ref: '#/definitions/PromotionQualificationProduct'
      potentialQualificationItem:
        type: array
        description: |
          A relation to another nested qualification item
        items:
          $ref: '#/definitions/potentialQualificationItem'
      potentialPromotion:
        type: array
        description: |
          A reference to the Potential Promotion instance with details
        items:
          $ref: '#/definitions/PotentialPromotion'
      itemTerm:
        type: array
        description: "The promotion qualification item term.  \n"
        items:
          $ref: '#/definitions/PromotionQualificationItemTerm'
      itemPrice:
        type: array
        description: "The promotion qualification item price.  \n"
        items:
          $ref: '#/definitions/PromotionQualificationPrice'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: potentialQualificationItemExtensions
    description: |
      The potential qualification item, which can represent the catalog item, product order item, shopping cart item, or configuration item. For a bundled structure, the potential promotions are returned.
  PromotionQualificationProduct:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the product
      version:
        type: string
        description: |
          The version of the product
      referenceId:
        type: string
        description: |
          Reference ID of the product
      status:
        type: string
        description: |
          The status of the Product in Inventory
      activationDate:
        type: string
        format: date-time
        description: "The date on which the product was activated. \n"
      product:
        type: array
        description: |
          A relation to the child product. Relevant in case product specification hierarchy.
        items:
          $ref: '#/definitions/PromotionQualificationProduct'
      productSpecification:
        description: |
          Reference to Catalog Product Spec that is part of the Product Offer.
        $ref: '#/definitions/ProductSpecificationRef'
      characteristic:
        type: array
        description: |
          A reference to the product specification characteristics.
        items:
          $ref: '#/definitions/Characteristic'
      promotionQualificationProductRelationship:
        type: array
        items:
          $ref: '#/definitions/PromotionQualificationProductRelationship'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PromotionQualificationProductExtensions
        x-dox-NotImplemented: true
    description: |
      The product in Inventory that implements the bundle product offering, simple product offering and product specifications
  PromotionQualificationProductRelationship:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the product relationship. It can be :
          - <i>bundled</i> if the product is a bundle and you want to describe the "bundled" products inside this bundle
          - <i>enabledBy</i> if the product needs another already owned product to rely on (e.g. an option on an already owned mobile access product)
          - <i>commercialRelation</i> defines the managed relationship between this product and another product
          - <i>priceContribution</i> if one of the product prices is impacted by other product
          - <i>subscriptionRelation</i> if the product is related to another product identified as subscriberMainOffer
      subtype:
        type: string
        description: "Specific relation entity subtype. Relevant for several relation types \n"
      product:
        $ref: '#/definitions/PromotionQualificationProduct'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PromotionQualificationProductRelationshipExtensions
        x-dox-NotImplemented: true
    description: |
      The product relationship
  PotentialPromotion:
    type: object
    properties:
      id:
        type: string
        description: |
          The instance ID of potential promotion
      promotion:
        $ref: '#/definitions/PromotionRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: PotentialPromotionExtensions
        x-dox-NotImplemented: true
    description: |
      The object of the potential promotion reference
  PromotionQualificationItemTerm:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the promotion qualification item term.
      description:
        type: string
        description: |
          Description of the promotion qualification item term
      type:
        type: string
        description: |
          The type of the promotion qualification item term, such as commitment
      duration:
        $ref: '#/definitions/Quantity'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PromotionQualificationItemTermExtensions
        x-dox-NotImplemented: true
    description: |
      The promotion qualification item term
    x-dox-DesignNote: |
      In practice it stands for Commitment Term (in the future other types of terms may be supported)
  PromotionQualificationPrice:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the catalog price
      name:
        type: string
        description: |
          Name of the catalog price, for example, Subscription Price
      priceType:
        type: string
        description: |
          Price type (OC/RC)
      recurringChargePeriod:
        type: string
        description: |
          Period for which to repeat the application of the recurring charge - days, weeks, months, or years. This property is populated only if the price type is Recurring.
      recurringChargePeriodLength:
        type: integer
        description: |
          The period length of the recurring charge
      price:
        $ref: '#/definitions/Price'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PromotionQualificationPriceExtensions
        x-dox-NotImplemented: true
    description: |
      The promotion qualification price
    x-dox-DesignNote: |
      Pricing entity holding the monetary value of the promotion qualification item